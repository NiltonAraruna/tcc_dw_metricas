/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['dataapi/controller.js']) {
  _$jscoverage['dataapi/controller.js'] = [];
  _$jscoverage['dataapi/controller.js'][3] = 0;
  _$jscoverage['dataapi/controller.js'][5] = 0;
  _$jscoverage['dataapi/controller.js'][7] = 0;
  _$jscoverage['dataapi/controller.js'][9] = 0;
  _$jscoverage['dataapi/controller.js'][10] = 0;
  _$jscoverage['dataapi/controller.js'][11] = 0;
  _$jscoverage['dataapi/controller.js'][12] = 0;
  _$jscoverage['dataapi/controller.js'][13] = 0;
  _$jscoverage['dataapi/controller.js'][15] = 0;
  _$jscoverage['dataapi/controller.js'][17] = 0;
  _$jscoverage['dataapi/controller.js'][22] = 0;
  _$jscoverage['dataapi/controller.js'][23] = 0;
  _$jscoverage['dataapi/controller.js'][24] = 0;
  _$jscoverage['dataapi/controller.js'][25] = 0;
  _$jscoverage['dataapi/controller.js'][28] = 0;
  _$jscoverage['dataapi/controller.js'][30] = 0;
  _$jscoverage['dataapi/controller.js'][32] = 0;
  _$jscoverage['dataapi/controller.js'][33] = 0;
  _$jscoverage['dataapi/controller.js'][34] = 0;
  _$jscoverage['dataapi/controller.js'][35] = 0;
  _$jscoverage['dataapi/controller.js'][37] = 0;
  _$jscoverage['dataapi/controller.js'][38] = 0;
  _$jscoverage['dataapi/controller.js'][39] = 0;
  _$jscoverage['dataapi/controller.js'][41] = 0;
  _$jscoverage['dataapi/controller.js'][42] = 0;
  _$jscoverage['dataapi/controller.js'][43] = 0;
  _$jscoverage['dataapi/controller.js'][44] = 0;
  _$jscoverage['dataapi/controller.js'][49] = 0;
  _$jscoverage['dataapi/controller.js'][53] = 0;
  _$jscoverage['dataapi/controller.js'][56] = 0;
  _$jscoverage['dataapi/controller.js'][58] = 0;
  _$jscoverage['dataapi/controller.js'][59] = 0;
  _$jscoverage['dataapi/controller.js'][60] = 0;
  _$jscoverage['dataapi/controller.js'][61] = 0;
  _$jscoverage['dataapi/controller.js'][63] = 0;
  _$jscoverage['dataapi/controller.js'][65] = 0;
  _$jscoverage['dataapi/controller.js'][66] = 0;
  _$jscoverage['dataapi/controller.js'][67] = 0;
  _$jscoverage['dataapi/controller.js'][73] = 0;
  _$jscoverage['dataapi/controller.js'][74] = 0;
  _$jscoverage['dataapi/controller.js'][75] = 0;
  _$jscoverage['dataapi/controller.js'][76] = 0;
  _$jscoverage['dataapi/controller.js'][77] = 0;
  _$jscoverage['dataapi/controller.js'][78] = 0;
  _$jscoverage['dataapi/controller.js'][79] = 0;
  _$jscoverage['dataapi/controller.js'][80] = 0;
  _$jscoverage['dataapi/controller.js'][87] = 0;
  _$jscoverage['dataapi/controller.js'][88] = 0;
  _$jscoverage['dataapi/controller.js'][90] = 0;
  _$jscoverage['dataapi/controller.js'][93] = 0;
  _$jscoverage['dataapi/controller.js'][94] = 0;
  _$jscoverage['dataapi/controller.js'][97] = 0;
  _$jscoverage['dataapi/controller.js'][101] = 0;
  _$jscoverage['dataapi/controller.js'][102] = 0;
  _$jscoverage['dataapi/controller.js'][104] = 0;
  _$jscoverage['dataapi/controller.js'][105] = 0;
  _$jscoverage['dataapi/controller.js'][106] = 0;
  _$jscoverage['dataapi/controller.js'][107] = 0;
  _$jscoverage['dataapi/controller.js'][110] = 0;
  _$jscoverage['dataapi/controller.js'][111] = 0;
  _$jscoverage['dataapi/controller.js'][112] = 0;
  _$jscoverage['dataapi/controller.js'][113] = 0;
  _$jscoverage['dataapi/controller.js'][114] = 0;
  _$jscoverage['dataapi/controller.js'][126] = 0;
  _$jscoverage['dataapi/controller.js'][127] = 0;
  _$jscoverage['dataapi/controller.js'][129] = 0;
  _$jscoverage['dataapi/controller.js'][136] = 0;
  _$jscoverage['dataapi/controller.js'][137] = 0;
  _$jscoverage['dataapi/controller.js'][140] = 0;
  _$jscoverage['dataapi/controller.js'][142] = 0;
  _$jscoverage['dataapi/controller.js'][144] = 0;
  _$jscoverage['dataapi/controller.js'][147] = 0;
  _$jscoverage['dataapi/controller.js'][153] = 0;
  _$jscoverage['dataapi/controller.js'][155] = 0;
  _$jscoverage['dataapi/controller.js'][156] = 0;
  _$jscoverage['dataapi/controller.js'][157] = 0;
  _$jscoverage['dataapi/controller.js'][159] = 0;
  _$jscoverage['dataapi/controller.js'][161] = 0;
  _$jscoverage['dataapi/controller.js'][165] = 0;
  _$jscoverage['dataapi/controller.js'][166] = 0;
  _$jscoverage['dataapi/controller.js'][168] = 0;
  _$jscoverage['dataapi/controller.js'][169] = 0;
  _$jscoverage['dataapi/controller.js'][170] = 0;
  _$jscoverage['dataapi/controller.js'][172] = 0;
  _$jscoverage['dataapi/controller.js'][173] = 0;
  _$jscoverage['dataapi/controller.js'][175] = 0;
  _$jscoverage['dataapi/controller.js'][179] = 0;
  _$jscoverage['dataapi/controller.js'][180] = 0;
  _$jscoverage['dataapi/controller.js'][181] = 0;
  _$jscoverage['dataapi/controller.js'][184] = 0;
  _$jscoverage['dataapi/controller.js'][190] = 0;
  _$jscoverage['dataapi/controller.js'][191] = 0;
  _$jscoverage['dataapi/controller.js'][192] = 0;
  _$jscoverage['dataapi/controller.js'][193] = 0;
  _$jscoverage['dataapi/controller.js'][194] = 0;
  _$jscoverage['dataapi/controller.js'][195] = 0;
  _$jscoverage['dataapi/controller.js'][196] = 0;
  _$jscoverage['dataapi/controller.js'][197] = 0;
  _$jscoverage['dataapi/controller.js'][200] = 0;
  _$jscoverage['dataapi/controller.js'][201] = 0;
  _$jscoverage['dataapi/controller.js'][204] = 0;
  _$jscoverage['dataapi/controller.js'][205] = 0;
  _$jscoverage['dataapi/controller.js'][206] = 0;
  _$jscoverage['dataapi/controller.js'][207] = 0;
  _$jscoverage['dataapi/controller.js'][210] = 0;
  _$jscoverage['dataapi/controller.js'][213] = 0;
  _$jscoverage['dataapi/controller.js'][214] = 0;
  _$jscoverage['dataapi/controller.js'][215] = 0;
  _$jscoverage['dataapi/controller.js'][216] = 0;
  _$jscoverage['dataapi/controller.js'][219] = 0;
  _$jscoverage['dataapi/controller.js'][222] = 0;
  _$jscoverage['dataapi/controller.js'][223] = 0;
  _$jscoverage['dataapi/controller.js'][224] = 0;
  _$jscoverage['dataapi/controller.js'][225] = 0;
  _$jscoverage['dataapi/controller.js'][228] = 0;
  _$jscoverage['dataapi/controller.js'][229] = 0;
  _$jscoverage['dataapi/controller.js'][230] = 0;
  _$jscoverage['dataapi/controller.js'][231] = 0;
  _$jscoverage['dataapi/controller.js'][233] = 0;
  _$jscoverage['dataapi/controller.js'][236] = 0;
  _$jscoverage['dataapi/controller.js'][237] = 0;
  _$jscoverage['dataapi/controller.js'][240] = 0;
  _$jscoverage['dataapi/controller.js'][241] = 0;
  _$jscoverage['dataapi/controller.js'][242] = 0;
  _$jscoverage['dataapi/controller.js'][244] = 0;
  _$jscoverage['dataapi/controller.js'][247] = 0;
  _$jscoverage['dataapi/controller.js'][248] = 0;
  _$jscoverage['dataapi/controller.js'][249] = 0;
  _$jscoverage['dataapi/controller.js'][250] = 0;
  _$jscoverage['dataapi/controller.js'][252] = 0;
  _$jscoverage['dataapi/controller.js'][255] = 0;
  _$jscoverage['dataapi/controller.js'][256] = 0;
  _$jscoverage['dataapi/controller.js'][259] = 0;
  _$jscoverage['dataapi/controller.js'][260] = 0;
  _$jscoverage['dataapi/controller.js'][263] = 0;
  _$jscoverage['dataapi/controller.js'][264] = 0;
  _$jscoverage['dataapi/controller.js'][267] = 0;
  _$jscoverage['dataapi/controller.js'][268] = 0;
  _$jscoverage['dataapi/controller.js'][269] = 0;
  _$jscoverage['dataapi/controller.js'][270] = 0;
  _$jscoverage['dataapi/controller.js'][271] = 0;
  _$jscoverage['dataapi/controller.js'][272] = 0;
  _$jscoverage['dataapi/controller.js'][276] = 0;
  _$jscoverage['dataapi/controller.js'][279] = 0;
  _$jscoverage['dataapi/controller.js'][280] = 0;
  _$jscoverage['dataapi/controller.js'][283] = 0;
  _$jscoverage['dataapi/controller.js'][284] = 0;
  _$jscoverage['dataapi/controller.js'][285] = 0;
  _$jscoverage['dataapi/controller.js'][286] = 0;
  _$jscoverage['dataapi/controller.js'][287] = 0;
  _$jscoverage['dataapi/controller.js'][288] = 0;
  _$jscoverage['dataapi/controller.js'][292] = 0;
  _$jscoverage['dataapi/controller.js'][295] = 0;
  _$jscoverage['dataapi/controller.js'][296] = 0;
  _$jscoverage['dataapi/controller.js'][297] = 0;
  _$jscoverage['dataapi/controller.js'][298] = 0;
  _$jscoverage['dataapi/controller.js'][301] = 0;
  _$jscoverage['dataapi/controller.js'][302] = 0;
  _$jscoverage['dataapi/controller.js'][303] = 0;
  _$jscoverage['dataapi/controller.js'][304] = 0;
  _$jscoverage['dataapi/controller.js'][307] = 0;
  _$jscoverage['dataapi/controller.js'][308] = 0;
  _$jscoverage['dataapi/controller.js'][309] = 0;
  _$jscoverage['dataapi/controller.js'][310] = 0;
  _$jscoverage['dataapi/controller.js'][311] = 0;
  _$jscoverage['dataapi/controller.js'][313] = 0;
  _$jscoverage['dataapi/controller.js'][314] = 0;
  _$jscoverage['dataapi/controller.js'][315] = 0;
  _$jscoverage['dataapi/controller.js'][316] = 0;
  _$jscoverage['dataapi/controller.js'][320] = 0;
  _$jscoverage['dataapi/controller.js'][323] = 0;
  _$jscoverage['dataapi/controller.js'][324] = 0;
  _$jscoverage['dataapi/controller.js'][325] = 0;
  _$jscoverage['dataapi/controller.js'][326] = 0;
  _$jscoverage['dataapi/controller.js'][329] = 0;
  _$jscoverage['dataapi/controller.js'][330] = 0;
  _$jscoverage['dataapi/controller.js'][331] = 0;
  _$jscoverage['dataapi/controller.js'][332] = 0;
  _$jscoverage['dataapi/controller.js'][335] = 0;
  _$jscoverage['dataapi/controller.js'][336] = 0;
  _$jscoverage['dataapi/controller.js'][337] = 0;
  _$jscoverage['dataapi/controller.js'][338] = 0;
  _$jscoverage['dataapi/controller.js'][339] = 0;
  _$jscoverage['dataapi/controller.js'][341] = 0;
  _$jscoverage['dataapi/controller.js'][342] = 0;
  _$jscoverage['dataapi/controller.js'][343] = 0;
  _$jscoverage['dataapi/controller.js'][344] = 0;
  _$jscoverage['dataapi/controller.js'][348] = 0;
  _$jscoverage['dataapi/controller.js'][351] = 0;
  _$jscoverage['dataapi/controller.js'][352] = 0;
  _$jscoverage['dataapi/controller.js'][353] = 0;
  _$jscoverage['dataapi/controller.js'][354] = 0;
  _$jscoverage['dataapi/controller.js'][355] = 0;
  _$jscoverage['dataapi/controller.js'][358] = 0;
  _$jscoverage['dataapi/controller.js'][361] = 0;
  _$jscoverage['dataapi/controller.js'][362] = 0;
  _$jscoverage['dataapi/controller.js'][365] = 0;
  _$jscoverage['dataapi/controller.js'][366] = 0;
  _$jscoverage['dataapi/controller.js'][367] = 0;
  _$jscoverage['dataapi/controller.js'][368] = 0;
  _$jscoverage['dataapi/controller.js'][369] = 0;
  _$jscoverage['dataapi/controller.js'][371] = 0;
  _$jscoverage['dataapi/controller.js'][374] = 0;
  _$jscoverage['dataapi/controller.js'][375] = 0;
  _$jscoverage['dataapi/controller.js'][376] = 0;
  _$jscoverage['dataapi/controller.js'][377] = 0;
  _$jscoverage['dataapi/controller.js'][378] = 0;
  _$jscoverage['dataapi/controller.js'][381] = 0;
  _$jscoverage['dataapi/controller.js'][383] = 0;
  _$jscoverage['dataapi/controller.js'][384] = 0;
  _$jscoverage['dataapi/controller.js'][385] = 0;
  _$jscoverage['dataapi/controller.js'][386] = 0;
  _$jscoverage['dataapi/controller.js'][388] = 0;
  _$jscoverage['dataapi/controller.js'][390] = 0;
  _$jscoverage['dataapi/controller.js'][393] = 0;
  _$jscoverage['dataapi/controller.js'][394] = 0;
  _$jscoverage['dataapi/controller.js'][395] = 0;
  _$jscoverage['dataapi/controller.js'][396] = 0;
  _$jscoverage['dataapi/controller.js'][397] = 0;
  _$jscoverage['dataapi/controller.js'][399] = 0;
  _$jscoverage['dataapi/controller.js'][401] = 0;
  _$jscoverage['dataapi/controller.js'][407] = 0;
  _$jscoverage['dataapi/controller.js'][408] = 0;
  _$jscoverage['dataapi/controller.js'][409] = 0;
  _$jscoverage['dataapi/controller.js'][410] = 0;
  _$jscoverage['dataapi/controller.js'][411] = 0;
  _$jscoverage['dataapi/controller.js'][412] = 0;
  _$jscoverage['dataapi/controller.js'][413] = 0;
  _$jscoverage['dataapi/controller.js'][414] = 0;
  _$jscoverage['dataapi/controller.js'][415] = 0;
  _$jscoverage['dataapi/controller.js'][416] = 0;
  _$jscoverage['dataapi/controller.js'][417] = 0;
  _$jscoverage['dataapi/controller.js'][418] = 0;
  _$jscoverage['dataapi/controller.js'][419] = 0;
  _$jscoverage['dataapi/controller.js'][422] = 0;
  _$jscoverage['dataapi/controller.js'][423] = 0;
  _$jscoverage['dataapi/controller.js'][426] = 0;
  _$jscoverage['dataapi/controller.js'][427] = 0;
  _$jscoverage['dataapi/controller.js'][432] = 0;
  _$jscoverage['dataapi/controller.js'][433] = 0;
  _$jscoverage['dataapi/controller.js'][434] = 0;
  _$jscoverage['dataapi/controller.js'][436] = 0;
  _$jscoverage['dataapi/controller.js'][437] = 0;
  _$jscoverage['dataapi/controller.js'][439] = 0;
  _$jscoverage['dataapi/controller.js'][440] = 0;
  _$jscoverage['dataapi/controller.js'][441] = 0;
  _$jscoverage['dataapi/controller.js'][442] = 0;
  _$jscoverage['dataapi/controller.js'][443] = 0;
  _$jscoverage['dataapi/controller.js'][444] = 0;
  _$jscoverage['dataapi/controller.js'][445] = 0;
  _$jscoverage['dataapi/controller.js'][446] = 0;
  _$jscoverage['dataapi/controller.js'][447] = 0;
  _$jscoverage['dataapi/controller.js'][449] = 0;
  _$jscoverage['dataapi/controller.js'][450] = 0;
  _$jscoverage['dataapi/controller.js'][451] = 0;
  _$jscoverage['dataapi/controller.js'][452] = 0;
  _$jscoverage['dataapi/controller.js'][454] = 0;
  _$jscoverage['dataapi/controller.js'][455] = 0;
  _$jscoverage['dataapi/controller.js'][456] = 0;
  _$jscoverage['dataapi/controller.js'][457] = 0;
  _$jscoverage['dataapi/controller.js'][458] = 0;
  _$jscoverage['dataapi/controller.js'][460] = 0;
  _$jscoverage['dataapi/controller.js'][461] = 0;
  _$jscoverage['dataapi/controller.js'][462] = 0;
  _$jscoverage['dataapi/controller.js'][463] = 0;
  _$jscoverage['dataapi/controller.js'][464] = 0;
  _$jscoverage['dataapi/controller.js'][465] = 0;
  _$jscoverage['dataapi/controller.js'][466] = 0;
  _$jscoverage['dataapi/controller.js'][467] = 0;
  _$jscoverage['dataapi/controller.js'][468] = 0;
  _$jscoverage['dataapi/controller.js'][469] = 0;
  _$jscoverage['dataapi/controller.js'][470] = 0;
  _$jscoverage['dataapi/controller.js'][471] = 0;
  _$jscoverage['dataapi/controller.js'][472] = 0;
  _$jscoverage['dataapi/controller.js'][474] = 0;
  _$jscoverage['dataapi/controller.js'][475] = 0;
  _$jscoverage['dataapi/controller.js'][476] = 0;
  _$jscoverage['dataapi/controller.js'][477] = 0;
  _$jscoverage['dataapi/controller.js'][478] = 0;
  _$jscoverage['dataapi/controller.js'][479] = 0;
  _$jscoverage['dataapi/controller.js'][480] = 0;
  _$jscoverage['dataapi/controller.js'][482] = 0;
  _$jscoverage['dataapi/controller.js'][483] = 0;
  _$jscoverage['dataapi/controller.js'][484] = 0;
  _$jscoverage['dataapi/controller.js'][485] = 0;
  _$jscoverage['dataapi/controller.js'][486] = 0;
  _$jscoverage['dataapi/controller.js'][487] = 0;
  _$jscoverage['dataapi/controller.js'][488] = 0;
  _$jscoverage['dataapi/controller.js'][489] = 0;
  _$jscoverage['dataapi/controller.js'][490] = 0;
  _$jscoverage['dataapi/controller.js'][491] = 0;
  _$jscoverage['dataapi/controller.js'][492] = 0;
  _$jscoverage['dataapi/controller.js'][493] = 0;
  _$jscoverage['dataapi/controller.js'][496] = 0;
  _$jscoverage['dataapi/controller.js'][497] = 0;
  _$jscoverage['dataapi/controller.js'][498] = 0;
  _$jscoverage['dataapi/controller.js'][499] = 0;
  _$jscoverage['dataapi/controller.js'][500] = 0;
  _$jscoverage['dataapi/controller.js'][502] = 0;
  _$jscoverage['dataapi/controller.js'][503] = 0;
  _$jscoverage['dataapi/controller.js'][504] = 0;
  _$jscoverage['dataapi/controller.js'][505] = 0;
  _$jscoverage['dataapi/controller.js'][506] = 0;
  _$jscoverage['dataapi/controller.js'][507] = 0;
  _$jscoverage['dataapi/controller.js'][508] = 0;
  _$jscoverage['dataapi/controller.js'][509] = 0;
  _$jscoverage['dataapi/controller.js'][510] = 0;
  _$jscoverage['dataapi/controller.js'][511] = 0;
  _$jscoverage['dataapi/controller.js'][512] = 0;
  _$jscoverage['dataapi/controller.js'][513] = 0;
  _$jscoverage['dataapi/controller.js'][515] = 0;
  _$jscoverage['dataapi/controller.js'][516] = 0;
  _$jscoverage['dataapi/controller.js'][517] = 0;
  _$jscoverage['dataapi/controller.js'][518] = 0;
  _$jscoverage['dataapi/controller.js'][519] = 0;
  _$jscoverage['dataapi/controller.js'][520] = 0;
  _$jscoverage['dataapi/controller.js'][521] = 0;
  _$jscoverage['dataapi/controller.js'][522] = 0;
  _$jscoverage['dataapi/controller.js'][523] = 0;
  _$jscoverage['dataapi/controller.js'][524] = 0;
  _$jscoverage['dataapi/controller.js'][525] = 0;
  _$jscoverage['dataapi/controller.js'][526] = 0;
  _$jscoverage['dataapi/controller.js'][528] = 0;
  _$jscoverage['dataapi/controller.js'][529] = 0;
  _$jscoverage['dataapi/controller.js'][530] = 0;
  _$jscoverage['dataapi/controller.js'][531] = 0;
  _$jscoverage['dataapi/controller.js'][532] = 0;
  _$jscoverage['dataapi/controller.js'][533] = 0;
  _$jscoverage['dataapi/controller.js'][534] = 0;
  _$jscoverage['dataapi/controller.js'][535] = 0;
  _$jscoverage['dataapi/controller.js'][536] = 0;
  _$jscoverage['dataapi/controller.js'][537] = 0;
  _$jscoverage['dataapi/controller.js'][538] = 0;
  _$jscoverage['dataapi/controller.js'][539] = 0;
  _$jscoverage['dataapi/controller.js'][541] = 0;
  _$jscoverage['dataapi/controller.js'][542] = 0;
  _$jscoverage['dataapi/controller.js'][543] = 0;
  _$jscoverage['dataapi/controller.js'][544] = 0;
  _$jscoverage['dataapi/controller.js'][545] = 0;
  _$jscoverage['dataapi/controller.js'][546] = 0;
  _$jscoverage['dataapi/controller.js'][548] = 0;
  _$jscoverage['dataapi/controller.js'][549] = 0;
  _$jscoverage['dataapi/controller.js'][550] = 0;
  _$jscoverage['dataapi/controller.js'][551] = 0;
  _$jscoverage['dataapi/controller.js'][552] = 0;
  _$jscoverage['dataapi/controller.js'][554] = 0;
  _$jscoverage['dataapi/controller.js'][555] = 0;
  _$jscoverage['dataapi/controller.js'][563] = 0;
  _$jscoverage['dataapi/controller.js'][572] = 0;
  _$jscoverage['dataapi/controller.js'][577] = 0;
  _$jscoverage['dataapi/controller.js'][588] = 0;
  _$jscoverage['dataapi/controller.js'][589] = 0;
  _$jscoverage['dataapi/controller.js'][590] = 0;
  _$jscoverage['dataapi/controller.js'][592] = 0;
  _$jscoverage['dataapi/controller.js'][593] = 0;
  _$jscoverage['dataapi/controller.js'][594] = 0;
  _$jscoverage['dataapi/controller.js'][595] = 0;
  _$jscoverage['dataapi/controller.js'][596] = 0;
  _$jscoverage['dataapi/controller.js'][597] = 0;
  _$jscoverage['dataapi/controller.js'][599] = 0;
  _$jscoverage['dataapi/controller.js'][600] = 0;
  _$jscoverage['dataapi/controller.js'][601] = 0;
  _$jscoverage['dataapi/controller.js'][602] = 0;
  _$jscoverage['dataapi/controller.js'][603] = 0;
  _$jscoverage['dataapi/controller.js'][604] = 0;
  _$jscoverage['dataapi/controller.js'][606] = 0;
  _$jscoverage['dataapi/controller.js'][607] = 0;
  _$jscoverage['dataapi/controller.js'][608] = 0;
  _$jscoverage['dataapi/controller.js'][609] = 0;
  _$jscoverage['dataapi/controller.js'][611] = 0;
  _$jscoverage['dataapi/controller.js'][612] = 0;
  _$jscoverage['dataapi/controller.js'][613] = 0;
  _$jscoverage['dataapi/controller.js'][614] = 0;
  _$jscoverage['dataapi/controller.js'][615] = 0;
  _$jscoverage['dataapi/controller.js'][616] = 0;
  _$jscoverage['dataapi/controller.js'][621] = 0;
  _$jscoverage['dataapi/controller.js'][623] = 0;
  _$jscoverage['dataapi/controller.js'][625] = 0;
  _$jscoverage['dataapi/controller.js'][627] = 0;
  _$jscoverage['dataapi/controller.js'][633] = 0;
  _$jscoverage['dataapi/controller.js'][634] = 0;
  _$jscoverage['dataapi/controller.js'][635] = 0;
  _$jscoverage['dataapi/controller.js'][636] = 0;
  _$jscoverage['dataapi/controller.js'][638] = 0;
  _$jscoverage['dataapi/controller.js'][641] = 0;
  _$jscoverage['dataapi/controller.js'][643] = 0;
  _$jscoverage['dataapi/controller.js'][644] = 0;
  _$jscoverage['dataapi/controller.js'][645] = 0;
  _$jscoverage['dataapi/controller.js'][647] = 0;
  _$jscoverage['dataapi/controller.js'][648] = 0;
  _$jscoverage['dataapi/controller.js'][649] = 0;
  _$jscoverage['dataapi/controller.js'][650] = 0;
  _$jscoverage['dataapi/controller.js'][651] = 0;
  _$jscoverage['dataapi/controller.js'][652] = 0;
  _$jscoverage['dataapi/controller.js'][654] = 0;
  _$jscoverage['dataapi/controller.js'][657] = 0;
  _$jscoverage['dataapi/controller.js'][658] = 0;
  _$jscoverage['dataapi/controller.js'][659] = 0;
  _$jscoverage['dataapi/controller.js'][660] = 0;
  _$jscoverage['dataapi/controller.js'][661] = 0;
  _$jscoverage['dataapi/controller.js'][664] = 0;
}
_$jscoverage['dataapi/controller.js'].source = ["<span class=\"c\">//= require \"oop.js\"</span>","<span class=\"c\">//= require \"app.js\"</span>","dojo<span class=\"k\">.</span>require<span class=\"k\">(</span><span class=\"s\">\"pentaho.common.Messages\"</span><span class=\"k\">);</span>","","pentaho <span class=\"k\">=</span> <span class=\"k\">typeof</span> pentaho <span class=\"k\">==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">?</span> <span class=\"k\">{}</span> <span class=\"k\">:</span> pentaho<span class=\"k\">;</span>","","pentaho<span class=\"k\">.</span>pda <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>SOURCE_TYPE_OLAP <span class=\"k\">=</span> <span class=\"s\">'olap'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>SOURCE_TYPE_MQL <span class=\"k\">=</span> <span class=\"s\">'mql'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>SOURCE_TYPE_SQL <span class=\"k\">=</span> <span class=\"s\">'sql'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>SOURCE_TYPE_ETL <span class=\"k\">=</span> <span class=\"s\">'etl'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>SOURCE_TYPE_CDA <span class=\"k\">=</span> <span class=\"s\">'cda'</span><span class=\"k\">;</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>modelaccess <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>addUrlBundle<span class=\"k\">(</span><span class=\"s\">'dataapi'</span><span class=\"k\">,</span>CONTEXT_PATH<span class=\"k\">+</span><span class=\"s\">'i18n?plugin=common-ui&amp;name=resources/web/dataapi/nls/messages'</span><span class=\"k\">);</span>","","<span class=\"c\">/*</span>","<span class=\"c\">          @class pentaho.pda.app</span>","<span class=\"c\">*/</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>app <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","\tpentaho<span class=\"k\">.</span>app<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span> <span class=\"c\">//call parent object</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>sources <span class=\"k\">=</span> <span class=\"k\">[];</span>  <span class=\"c\">//cache of sources</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>attempts <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","inheritPrototype<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>app<span class=\"k\">,</span> pentaho<span class=\"k\">.</span>app<span class=\"k\">);</span> <span class=\"c\">//borrow the parent's methods</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>discoverSources <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>callback<span class=\"k\">,</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"c\">//should only be here if we don't have sources already</span>","\t<span class=\"k\">var</span> md <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>moduleData<span class=\"k\">,</span> handler<span class=\"k\">,</span> that<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">,</span> sources <span class=\"k\">=</span> <span class=\"k\">[];</span>","\t<span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> src <span class=\"k\">in</span> md<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>moduleData<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>src<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">continue</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">var</span> h <span class=\"k\">=</span> md<span class=\"k\">[</span>src<span class=\"k\">].</span>instance<span class=\"k\">;</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>h <span class=\"k\">instanceof</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Handler<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\th<span class=\"k\">.</span>getSources<span class=\"k\">(</span> <span class=\"c\">//{property:'name', value:'Customers'},</span>","\t\t\t\t<span class=\"k\">function</span><span class=\"k\">(</span>source<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t\t\tthat<span class=\"k\">.</span>addSource<span class=\"k\">(</span>source<span class=\"k\">);</span>","\t\t\t\t\tsources<span class=\"k\">.</span>push<span class=\"k\">(</span>source<span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>callback<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tcallback<span class=\"k\">(</span>source<span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span> options","\t\t\t<span class=\"k\">)</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">throw</span> <span class=\"k\">new</span> Error<span class=\"k\">(</span>md<span class=\"k\">[</span>src<span class=\"k\">].</span>name <span class=\"k\">+</span> <span class=\"s\">' is not an instanceof pentaho.pda.Handler'</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span>","","\t<span class=\"k\">return</span> sources<span class=\"k\">;</span>","<span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getSources <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>callback<span class=\"k\">,</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t<span class=\"k\">var</span> i<span class=\"k\">,</span>j<span class=\"k\">,</span>_sources <span class=\"k\">=</span> <span class=\"k\">[],</span> each<span class=\"k\">;</span>","  options <span class=\"k\">=</span> options <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","\t<span class=\"k\">var</span> filter <span class=\"k\">=</span> options<span class=\"k\">[</span><span class=\"s\">'filter'</span><span class=\"k\">];</span>","\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>sources<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","<span class=\"c\">//\t\tconsole.log('using existing sources');</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>filter <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","<span class=\"c\">//\t\t\tconsole.log('no filter used');</span>","\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">,</span>j<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>sources<span class=\"k\">.</span>length<span class=\"k\">;</span>i<span class=\"k\">&lt;</span>j<span class=\"k\">;</span>i<span class=\"k\">++)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>callback<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tcallback<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>sources<span class=\"k\">[</span>i<span class=\"k\">]);</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","<span class=\"c\">//\t\t\tconsole.log('using filter');</span>","<span class=\"c\">//\t\t\tconsole.log(filter);</span>","\t\t\t_sources <span class=\"k\">=</span> <span class=\"k\">[];</span>","\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>i<span class=\"k\">&lt;</span><span class=\"k\">this</span><span class=\"k\">.</span>sources<span class=\"k\">.</span>length<span class=\"k\">;</span>i<span class=\"k\">++)</span> <span class=\"k\">{</span>","\t\t\t\teach <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>sources<span class=\"k\">[</span>i<span class=\"k\">];</span>","\t\t\t\t<span class=\"k\">try</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>each<span class=\"k\">[</span>filter<span class=\"k\">.</span>property<span class=\"k\">]</span> <span class=\"k\">==</span> filter<span class=\"k\">.</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t_sources<span class=\"k\">.</span>push<span class=\"k\">(</span>each<span class=\"k\">);</span>","\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>callback<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\tcallback<span class=\"k\">(</span>each<span class=\"k\">);</span>","\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">catch</span><span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"c\">//just move on to next</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>_sources<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> _sources<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> _sources<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>sources<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>sources<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","<span class=\"c\">//\t\t\tconsole.log('returning all sources');</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>sources<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span> <span class=\"c\">// length == 0</span>","<span class=\"c\">//\t\tconsole.log('no sources');</span>","\t\t<span class=\"k\">var</span> that <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>discoverSources<span class=\"k\">(</span>","\t\t\t<span class=\"k\">function</span><span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>filter <span class=\"k\">==</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t_sources<span class=\"k\">.</span>push<span class=\"k\">(</span>source<span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>callback<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tcallback<span class=\"k\">(</span>source<span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">try</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>source<span class=\"k\">[</span>filter<span class=\"k\">.</span>property<span class=\"k\">]</span> <span class=\"k\">==</span> filter<span class=\"k\">.</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t_sources<span class=\"k\">.</span>push<span class=\"k\">(</span>source<span class=\"k\">);</span>","\t\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>callback<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t\tcallback<span class=\"k\">(</span>source<span class=\"k\">);</span>","\t\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t<span class=\"c\">//console.log('no match for:' + each[filter.property] + ':' + filter.value);</span>","\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">catch</span><span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"c\">//just move on to next</span>","<span class=\"c\">//\t\t\t\t\t\tconsole.log(e);</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span> options","\t\t<span class=\"k\">);</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>_sources<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> _sources<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> _sources<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","\t\t","\t<span class=\"k\">}</span>","\t","<span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>addSource <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>source<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>sources<span class=\"k\">.</span>push<span class=\"k\">(</span>source<span class=\"k\">);</span>","<span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>sortData <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> results<span class=\"k\">,</span> columnIdx<span class=\"k\">,</span> direction <span class=\"k\">)</span> <span class=\"k\">{</span>","","    <span class=\"k\">if</span><span class=\"k\">(</span> columnIdx <span class=\"k\">==</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"c\">// no sorting to apply</span>","        <span class=\"k\">return</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"c\">// create a new data set</span>","    <span class=\"k\">var</span> sorted <span class=\"k\">=</span> <span class=\"k\">{</span> ","        <span class=\"s\">\"metadata\"</span> <span class=\"k\">:</span> results<span class=\"k\">.</span>metadata<span class=\"k\">,</span>","        <span class=\"s\">\"resultset\"</span> <span class=\"k\">:</span> <span class=\"k\">[]</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    ","    <span class=\"c\">// TODO support multi-level sort</span>","    <span class=\"k\">try</span> <span class=\"k\">{</span>","        <span class=\"c\">// TODO find a better way to do this without using globals</span>","        pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>sortedColumnIdx <span class=\"k\">=</span> columnIdx<span class=\"k\">;</span>","        pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>sortDirection <span class=\"k\">=</span> direction<span class=\"k\">;</span>","        sorted<span class=\"k\">.</span>resultset <span class=\"k\">=</span> results<span class=\"k\">.</span>resultset<span class=\"k\">.</span>sort<span class=\"k\">(</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>compareRows <span class=\"k\">);</span>","    <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        alert<span class=\"k\">(</span>e<span class=\"k\">.</span>message<span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> sorted<span class=\"k\">;</span>    ","","<span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>sortedColumnIdx <span class=\"k\">=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>sortDirection <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>compareRows <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> row1<span class=\"k\">,</span> row2 <span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span><span class=\"k\">(</span> row1<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>sortedColumnIdx<span class=\"k\">]</span> <span class=\"k\">==</span> row2<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>sortedColumnIdx<span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">if</span><span class=\"k\">(</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>sortDirection <span class=\"k\">==</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>SORT_TYPES<span class=\"k\">.</span>ASCENDING <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">(</span> row1<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>sortedColumnIdx<span class=\"k\">]</span> <span class=\"k\">&gt;</span> row2<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>sortedColumnIdx<span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">(</span> row1<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>sortedColumnIdx<span class=\"k\">]</span> <span class=\"k\">&lt;</span> row2<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>app<span class=\"k\">.</span>prototype<span class=\"k\">.</span>sortedColumnIdx<span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","    <span class=\"k\">}</span> ","<span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Handler <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>sandbox<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>sandbox <span class=\"k\">=</span> sandbox<span class=\"k\">;</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>sources <span class=\"k\">=</span> <span class=\"k\">[];</span>","<span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Handler<span class=\"k\">.</span>prototype<span class=\"k\">.</span>init <span class=\"k\">=</span> <span class=\"k\">function</span> init<span class=\"k\">()</span> <span class=\"k\">{</span>","<span class=\"k\">}</span>","","<span class=\"c\">/*</span>","<span class=\"c\">          @class pentaho.pda.model</span>","<span class=\"c\">*/</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>obj<span class=\"k\">)</span><span class=\"k\">{</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>id          <span class=\"k\">=</span> obj<span class=\"k\">.</span>id <span class=\"k\">||</span> <span class=\"s\">1</span><span class=\"k\">;</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>name        <span class=\"k\">=</span> obj<span class=\"k\">.</span>name <span class=\"k\">||</span> <span class=\"s\">'unknown'</span><span class=\"k\">;</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>type        <span class=\"k\">=</span> obj<span class=\"k\">.</span>type <span class=\"k\">||</span> <span class=\"s\">'unknown'</span><span class=\"k\">;</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>description <span class=\"k\">=</span> obj<span class=\"k\">.</span>description <span class=\"k\">||</span> <span class=\"s\">''</span><span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>elements    <span class=\"k\">=</span> obj<span class=\"k\">.</span>elements <span class=\"k\">||</span> <span class=\"k\">[];</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>capabilities <span class=\"k\">=</span> obj<span class=\"k\">.</span>capabilities <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>categories  <span class=\"k\">=</span> <span class=\"k\">[];</span>","<span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getCategories <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>categories<span class=\"k\">;</span>","<span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getNodeText <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> node<span class=\"k\">,</span> tag <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span><span class=\"k\">(</span> <span class=\"k\">var</span> idx<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> idx<span class=\"k\">&lt;</span>node<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length<span class=\"k\">;</span> idx<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>node<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>idx<span class=\"k\">].</span>nodeName <span class=\"k\">==</span> tag<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>getText<span class=\"k\">(</span> node<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>idx<span class=\"k\">]</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span> <span class=\"c\">//getNodeText</span>","    ","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getNodeTextOfChild <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> node<span class=\"k\">,</span> tag1<span class=\"k\">,</span> tag2 <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span><span class=\"k\">(</span> <span class=\"k\">var</span> idx<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> idx<span class=\"k\">&lt;</span>node<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length<span class=\"k\">;</span> idx<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>node<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>idx<span class=\"k\">].</span>nodeName <span class=\"k\">==</span> tag1<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>getNodeText<span class=\"k\">(</span> node<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>idx<span class=\"k\">],</span> tag2 <span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","<span class=\"k\">}</span> <span class=\"c\">//getNodeTextOfChild</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getText <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(!</span>node <span class=\"k\">||</span> <span class=\"k\">!</span>node<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span><span class=\"k\">(</span>node<span class=\"k\">.</span>textContent<span class=\"k\">)</span> <span class=\"k\">!=</span> <span class=\"s\">\"undefined\"</span><span class=\"k\">)</span> <span class=\"k\">return</span> node<span class=\"k\">.</span>textContent<span class=\"k\">;</span>","        <span class=\"k\">return</span> node<span class=\"k\">.</span>firstChild<span class=\"k\">.</span>nodeValue<span class=\"k\">;</span>","<span class=\"k\">}</span> <span class=\"c\">//getText</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>hasCapability <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> capability <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> value <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>capabilities<span class=\"k\">[</span>capability<span class=\"k\">];</span>","        <span class=\"k\">if</span><span class=\"k\">(</span> <span class=\"k\">typeof</span> value <span class=\"k\">==</span> <span class=\"s\">'undefined'</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getCapabilityValue <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> capability <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>capabilities<span class=\"k\">[</span>capability<span class=\"k\">];</span>","    <span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>addCapability <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> capability<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(</span> <span class=\"k\">typeof</span> value <span class=\"k\">==</span> <span class=\"s\">'undefined'</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","          value <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>  ","        <span class=\"k\">}</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>capabilities<span class=\"k\">[</span>capability<span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getCapabilityNames <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> list <span class=\"k\">=</span> <span class=\"k\">new</span> Array<span class=\"k\">();</span>","        <span class=\"k\">for</span><span class=\"k\">(</span> x <span class=\"k\">in</span> <span class=\"k\">this</span><span class=\"k\">.</span>capabilities <span class=\"k\">)</span> <span class=\"k\">{</span>","            list<span class=\"k\">.</span>push<span class=\"k\">(</span> x <span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> list<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>addElement <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> element <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>elements<span class=\"k\">.</span>push<span class=\"k\">(</span> element <span class=\"k\">);</span>","    <span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getAllElements <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>elements<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getElementsOfType <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> type <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>getElementsOfTypes<span class=\"k\">(</span> <span class=\"k\">new</span> Array<span class=\"k\">(</span> type <span class=\"k\">)</span> <span class=\"k\">);</span>","    <span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getElementsOfTypes <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> types <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> elements <span class=\"k\">=</span> <span class=\"k\">new</span> Array<span class=\"k\">();</span>","        <span class=\"k\">for</span><span class=\"k\">(</span> <span class=\"k\">var</span> idx<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> idx<span class=\"k\">&lt;</span><span class=\"k\">this</span><span class=\"k\">.</span>elements<span class=\"k\">.</span>length<span class=\"k\">;</span> idx<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">for</span><span class=\"k\">(</span> <span class=\"k\">var</span> typeNo<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> typeNo<span class=\"k\">&lt;</span>types<span class=\"k\">.</span>length<span class=\"k\">;</span> typeNo<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>elements<span class=\"k\">[</span>idx<span class=\"k\">].</span>elementType <span class=\"k\">==</span> types<span class=\"k\">[</span>typeNo<span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    elements<span class=\"k\">.</span>push<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>elements<span class=\"k\">[</span>idx<span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> elements<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getElementsOfDataType <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> type <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>getElementsOfDataTypes<span class=\"k\">(</span> <span class=\"k\">new</span> Array<span class=\"k\">(</span> type <span class=\"k\">)</span> <span class=\"k\">);</span>","    <span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getElementsOfDataTypes <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> types <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> elements <span class=\"k\">=</span> <span class=\"k\">new</span> Array<span class=\"k\">();</span>","        <span class=\"k\">for</span><span class=\"k\">(</span> <span class=\"k\">var</span> idx<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> idx<span class=\"k\">&lt;</span><span class=\"k\">this</span><span class=\"k\">.</span>elements<span class=\"k\">.</span>length<span class=\"k\">;</span> idx<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">for</span><span class=\"k\">(</span> <span class=\"k\">var</span> typeNo<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> typeNo<span class=\"k\">&lt;</span>types<span class=\"k\">.</span>length<span class=\"k\">;</span> typeNo<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>elements<span class=\"k\">[</span>idx<span class=\"k\">].</span>dataType <span class=\"k\">==</span> types<span class=\"k\">[</span>typeNo<span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    elements<span class=\"k\">.</span>push<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>elements<span class=\"k\">[</span>idx<span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> elements<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getQueryElementsByFieldType <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> fieldType <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> fieldTypes <span class=\"k\">=</span> <span class=\"k\">new</span> Array<span class=\"k\">();</span>","        fieldTypes<span class=\"k\">.</span>push<span class=\"k\">(</span> fieldType <span class=\"k\">);</span>","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>getColumnsByFieldTypes<span class=\"k\">(</span>fieldTypes<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","\t","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getColumnsByFieldType <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> fieldType <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> fieldTypes <span class=\"k\">=</span> <span class=\"k\">new</span> Array<span class=\"k\">();</span>","        fieldTypes<span class=\"k\">.</span>push<span class=\"k\">(</span> fieldType <span class=\"k\">);</span>","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>getColumnsByFieldTypes<span class=\"k\">(</span>fieldTypes<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getColumnsByFieldTypes <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> fieldTypes<span class=\"k\">,</span> allElements <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> cols <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getAllColumns<span class=\"k\">();</span>","        <span class=\"k\">var</span> columns <span class=\"k\">=</span> <span class=\"k\">new</span> Array<span class=\"k\">();</span>","        <span class=\"k\">if</span><span class=\"k\">(</span> <span class=\"k\">!</span>fieldTypes <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> cols<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">for</span><span class=\"k\">(</span> <span class=\"k\">var</span> colNo<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> colNo<span class=\"k\">&lt;</span>cols<span class=\"k\">.</span>length<span class=\"k\">;</span> colNo<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">for</span><span class=\"k\">(</span> <span class=\"k\">var</span> typeNo<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> typeNo<span class=\"k\">&lt;</span>fieldTypes<span class=\"k\">.</span>length<span class=\"k\">;</span> typeNo<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span> cols<span class=\"k\">[</span>colNo<span class=\"k\">].</span>elementType <span class=\"k\">==</span> fieldTypes<span class=\"k\">[</span>typeNo<span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>cols<span class=\"k\">[</span>colNo<span class=\"k\">].</span>isQueryElement <span class=\"k\">||</span> allElements<span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    columns<span class=\"k\">.</span>push<span class=\"k\">(</span> cols<span class=\"k\">[</span>colNo<span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> columns<span class=\"k\">;</span>","    <span class=\"k\">}</span>    ","    ","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getQueryElementsByDataType <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> dataType <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> dataTypes <span class=\"k\">=</span> <span class=\"k\">new</span> Array<span class=\"k\">();</span>","        dataTypes<span class=\"k\">.</span>push<span class=\"k\">(</span> dataType <span class=\"k\">);</span>","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>getColumnsByDataTypes<span class=\"k\">(</span>dataTypes<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","        ","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getColumnsByDataType <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> dataType <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> dataTypes <span class=\"k\">=</span> <span class=\"k\">new</span> Array<span class=\"k\">();</span>","        dataTypes<span class=\"k\">.</span>push<span class=\"k\">(</span> dataType <span class=\"k\">);</span>","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>getColumnsByDataTypes<span class=\"k\">(</span>dataTypes<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getColumnsByDataTypes <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> dataTypes<span class=\"k\">,</span> allElements <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> cols <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getAllColumns<span class=\"k\">();</span>","        <span class=\"k\">var</span> columns <span class=\"k\">=</span> <span class=\"k\">new</span> Array<span class=\"k\">();</span>","        <span class=\"k\">if</span><span class=\"k\">(</span> <span class=\"k\">!</span>dataTypes <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> cols<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">for</span><span class=\"k\">(</span> <span class=\"k\">var</span> colNo<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> colNo<span class=\"k\">&lt;</span>cols<span class=\"k\">.</span>length<span class=\"k\">;</span> colNo<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">for</span><span class=\"k\">(</span> <span class=\"k\">var</span> typeNo<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> typeNo<span class=\"k\">&lt;</span>dataTypes<span class=\"k\">.</span>length<span class=\"k\">;</span> typeNo<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span> cols<span class=\"k\">[</span>colNo<span class=\"k\">].</span>dataType <span class=\"k\">==</span> dataTypes<span class=\"k\">[</span>typeNo<span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>cols<span class=\"k\">[</span>colNo<span class=\"k\">].</span>isQueryElement <span class=\"k\">||</span> allElements<span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    columns<span class=\"k\">.</span>push<span class=\"k\">(</span> cols<span class=\"k\">[</span>colNo<span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> columns<span class=\"k\">;</span>","    <span class=\"k\">}</span>    ","    ","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getColumnById <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> id <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> cols <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getAllColumns<span class=\"k\">();</span>","        <span class=\"k\">for</span><span class=\"k\">(</span> <span class=\"k\">var</span> colNo<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> colNo<span class=\"k\">&lt;</span>cols<span class=\"k\">.</span>length<span class=\"k\">;</span> colNo<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span><span class=\"k\">(</span> cols<span class=\"k\">[</span>colNo<span class=\"k\">].</span>id <span class=\"k\">==</span> id <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> cols<span class=\"k\">[</span>colNo<span class=\"k\">];</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    ","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>sortColumnsByName <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> columns <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> columns<span class=\"k\">.</span>sort<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">(</span> c1<span class=\"k\">,</span> c2 <span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">(</span> c1<span class=\"k\">.</span>name <span class=\"k\">==</span> c2<span class=\"k\">.</span>name <span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">(</span> c1<span class=\"k\">.</span>name <span class=\"k\">&gt;</span> c2<span class=\"k\">.</span>name <span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">}</span> <span class=\"k\">)</span>","    <span class=\"k\">}</span>    ","    ","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>createListOptions <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>columnList <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> options <span class=\"k\">=</span> <span class=\"k\">new</span> Array<span class=\"k\">();</span>","        <span class=\"k\">for</span><span class=\"k\">(</span> <span class=\"k\">var</span> idx<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> idx<span class=\"k\">&lt;</span>columnList<span class=\"k\">.</span>length<span class=\"k\">;</span> idx<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> option <span class=\"k\">=</span> <span class=\"k\">new</span> Option<span class=\"k\">(</span> columnList<span class=\"k\">[</span>idx<span class=\"k\">].</span>name<span class=\"k\">,</span> columnList<span class=\"k\">[</span>idx<span class=\"k\">].</span>id <span class=\"k\">);</span>","            options<span class=\"k\">.</span>push<span class=\"k\">(</span> option <span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> options<span class=\"k\">;</span>","    <span class=\"k\">}</span>","        ","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>populateListFromResults <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> valuesList<span class=\"k\">,</span> results<span class=\"k\">,</span> textColumnNumber<span class=\"k\">,</span> valueColumnNumber <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> hasValues <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">if</span><span class=\"k\">(</span> <span class=\"s\">''</span><span class=\"k\">+</span>valueColumnNumber <span class=\"k\">!=</span> <span class=\"s\">'undefined'</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span><span class=\"k\">(</span> valueColumnNumber <span class=\"k\">&gt;=</span><span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> valueColumnNumber <span class=\"k\">&lt;</span> results<span class=\"k\">.</span>columnNames<span class=\"k\">.</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","                hasValues <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span><span class=\"k\">(</span> results<span class=\"k\">.</span>resultset <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"c\">// CDA format</span>","            <span class=\"k\">for</span><span class=\"k\">(</span> <span class=\"k\">var</span> idx<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> idx<span class=\"k\">&lt;</span>results<span class=\"k\">.</span>resultset<span class=\"k\">.</span>length<span class=\"k\">;</span> idx<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> option<span class=\"k\">;</span>","                <span class=\"k\">if</span><span class=\"k\">(</span> hasValues <span class=\"k\">)</span> <span class=\"k\">{</span>","                    option <span class=\"k\">=</span> <span class=\"k\">new</span> Option<span class=\"k\">(</span> results<span class=\"k\">.</span>resultset<span class=\"k\">[</span>idx<span class=\"k\">][</span>textColumnNumber<span class=\"k\">],</span> results<span class=\"k\">.</span>resultset<span class=\"k\">[</span>idx<span class=\"k\">][</span>valueColumnNumber<span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    option <span class=\"k\">=</span> <span class=\"k\">new</span> Option<span class=\"k\">(</span> results<span class=\"k\">.</span>resultset<span class=\"k\">[</span>idx<span class=\"k\">][</span>textColumnNumber<span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","                valuesList<span class=\"k\">.</span>options<span class=\"k\">[</span>valuesList<span class=\"k\">.</span>options<span class=\"k\">.</span>length<span class=\"k\">]</span> <span class=\"k\">=</span> option<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span> ","        <span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span> results<span class=\"k\">.</span>jsonTable <span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">// DataTable format</span>","            <span class=\"k\">for</span><span class=\"k\">(</span> <span class=\"k\">var</span> idx<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> idx<span class=\"k\">&lt;</span>results<span class=\"k\">.</span>getNumberOfRows<span class=\"k\">();</span> idx<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> option<span class=\"k\">;</span>","                <span class=\"k\">if</span><span class=\"k\">(</span> hasValues <span class=\"k\">)</span> <span class=\"k\">{</span>","                    option <span class=\"k\">=</span> <span class=\"k\">new</span> Option<span class=\"k\">(</span> results<span class=\"k\">.</span>getFormattedValue<span class=\"k\">(</span>idx<span class=\"k\">,</span>textColumnNumber <span class=\"k\">),</span> results<span class=\"k\">.</span>getFormattedValue<span class=\"k\">(</span>idx<span class=\"k\">,</span>valueColumnNumber <span class=\"k\">)</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    option <span class=\"k\">=</span> <span class=\"k\">new</span> Option<span class=\"k\">(</span> results<span class=\"k\">.</span>getFormattedValue<span class=\"k\">(</span>idx<span class=\"k\">,</span>textColumnNumber <span class=\"k\">)</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","                valuesList<span class=\"k\">.</span>options<span class=\"k\">[</span>valuesList<span class=\"k\">.</span>options<span class=\"k\">.</span>length<span class=\"k\">]</span> <span class=\"k\">=</span> option<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","        ","        ","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>dataelement <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>dataType <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>UNKNOWN<span class=\"k\">;</span>","<span class=\"k\">this</span><span class=\"k\">.</span>elementType <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ELEMENT_TYPES<span class=\"k\">.</span>UNKNOWN<span class=\"k\">;</span>","<span class=\"k\">this</span><span class=\"k\">.</span>id <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","<span class=\"k\">this</span><span class=\"k\">.</span>name <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","<span class=\"k\">this</span><span class=\"k\">.</span>description <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","<span class=\"k\">this</span><span class=\"k\">.</span>defaultAggregation <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>NONE<span class=\"k\">;</span>","<span class=\"k\">this</span><span class=\"k\">.</span>selectedAggregation <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>NONE<span class=\"k\">;</span>","<span class=\"k\">this</span><span class=\"k\">.</span>availableAggregations <span class=\"k\">=</span> <span class=\"k\">new</span> Array<span class=\"k\">();</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>parent <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>children <span class=\"k\">=</span> <span class=\"k\">new</span> Array<span class=\"k\">();</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>isQueryElement <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>capabilities <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>dataelement<span class=\"k\">.</span>prototype<span class=\"k\">.</span>addChild <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> child <span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>children<span class=\"k\">.</span>push<span class=\"k\">(</span> child <span class=\"k\">);</span>","<span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>query <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>model<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>model <span class=\"k\">=</span> model<span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"c\">// constants</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>AXIS_LOCATION_ACROSS <span class=\"k\">=</span> <span class=\"s\">'across'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>AXIS_LOCATION_DOWN <span class=\"k\">=</span> <span class=\"s\">'down'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>AXIS_LOCATION_SLICER <span class=\"k\">=</span> <span class=\"s\">'slicer'</span><span class=\"k\">;</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>SORT_DIRECTION_ASC <span class=\"k\">=</span> <span class=\"s\">'ASC'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>SORT_DIRECTION_DESC <span class=\"k\">=</span> <span class=\"s\">'DESC'</span><span class=\"k\">;</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>MODEL <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>CAPABILITIES <span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>CAPABILITIES<span class=\"k\">.</span>HAS_ACROSS_AXIS <span class=\"k\">=</span> <span class=\"s\">\"across-axis\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>CAPABILITIES<span class=\"k\">.</span>IS_ACROSS_CUSTOM <span class=\"k\">=</span> <span class=\"s\">\"across-axis-customizable\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>CAPABILITIES<span class=\"k\">.</span>HAS_DOWN_AXIS <span class=\"k\">=</span> <span class=\"s\">\"down-axis\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>CAPABILITIES<span class=\"k\">.</span>IS_DOWN_CUSTOM <span class=\"k\">=</span> <span class=\"s\">\"down-axis-customizable\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>CAPABILITIES<span class=\"k\">.</span>HAS_FILTERS <span class=\"k\">=</span> <span class=\"s\">\"filter-axis\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>CAPABILITIES<span class=\"k\">.</span>IS_FILTER_CUSTOM <span class=\"k\">=</span> <span class=\"s\">\"filter-axis-customizable\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>CAPABILITIES<span class=\"k\">.</span>CAN_SORT <span class=\"k\">=</span> <span class=\"s\">\"sortable\"</span><span class=\"k\">;</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>SORT_TYPES <span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>SORT_TYPES<span class=\"k\">.</span>ASCENDING <span class=\"k\">=</span> <span class=\"s\">\"ASC\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>SORT_TYPES<span class=\"k\">.</span>DESCENDING <span class=\"k\">=</span> <span class=\"s\">\"DESC\"</span><span class=\"k\">;</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>OPERATOR_TYPES <span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>OPERATOR_TYPES<span class=\"k\">.</span>OR <span class=\"k\">=</span> <span class=\"s\">'OR'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>OPERATOR_TYPES<span class=\"k\">.</span>OR_NOT <span class=\"k\">=</span> <span class=\"s\">'OR NOT'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>OPERATOR_TYPES<span class=\"k\">.</span>AND <span class=\"k\">=</span> <span class=\"s\">'AND'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>OPERATOR_TYPES<span class=\"k\">.</span>AND_NOT <span class=\"k\">=</span> <span class=\"s\">'AND NOT'</span><span class=\"k\">;</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES <span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>LIKE <span class=\"k\">=</span> <span class=\"s\">'LIKE'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>BEGINSWITH <span class=\"k\">=</span> <span class=\"s\">'BEGINS WITH'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>ENDSWITH <span class=\"k\">=</span> <span class=\"s\">'ENDS WITH'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>CONTAINS <span class=\"k\">=</span> <span class=\"s\">'CONTAINS'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>NOT_CONTAINS <span class=\"k\">=</span> <span class=\"s\">'DOES NOT CONTAIN'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>EQUAL <span class=\"k\">=</span> <span class=\"s\">'EQUAL'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>LESS_THAN <span class=\"k\">=</span> <span class=\"s\">'&lt;'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>LESS_THAN_OR_EQUAL <span class=\"k\">=</span> <span class=\"s\">'&lt;='</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>MORE_THAN <span class=\"k\">=</span> <span class=\"s\">'&gt;'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>MORE_THAN_OR_EQUAL <span class=\"k\">=</span> <span class=\"s\">'&gt;='</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>IS_NULL <span class=\"k\">=</span> <span class=\"s\">'IS NULL'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>NOT_NULL <span class=\"k\">=</span> <span class=\"s\">'IS NOT NULL'</span><span class=\"k\">;</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES <span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>NUMERIC <span class=\"k\">=</span> <span class=\"s\">\"NUMERIC\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>STRING <span class=\"k\">=</span> <span class=\"s\">\"STRING\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>DATE <span class=\"k\">=</span> <span class=\"s\">\"DATE\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>BOOLEAN <span class=\"k\">=</span> <span class=\"s\">\"BOOLEAN\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>UNKNOWN <span class=\"k\">=</span> <span class=\"s\">\"UNKNOWN\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>NONE <span class=\"k\">=</span> <span class=\"s\">\"NONE\"</span><span class=\"k\">;</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ELEMENT_TYPES <span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ELEMENT_TYPES<span class=\"k\">.</span>CATEGORY <span class=\"k\">=</span> <span class=\"s\">\"CATEGORY\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ELEMENT_TYPES<span class=\"k\">.</span>CUBE <span class=\"k\">=</span> <span class=\"s\">\"CUBE\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ELEMENT_TYPES<span class=\"k\">.</span>DIMENSION <span class=\"k\">=</span> <span class=\"s\">\"DIMENSION\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ELEMENT_TYPES<span class=\"k\">.</span>HIERARCHY <span class=\"k\">=</span> <span class=\"s\">\"HIERARCHY\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ELEMENT_TYPES<span class=\"k\">.</span>LEVEL <span class=\"k\">=</span> <span class=\"s\">\"LEVEL\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ELEMENT_TYPES<span class=\"k\">.</span>MEMBER <span class=\"k\">=</span> <span class=\"s\">\"MEMBER\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ELEMENT_TYPES<span class=\"k\">.</span>FACT <span class=\"k\">=</span> <span class=\"s\">\"FACT\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ELEMENT_TYPES<span class=\"k\">.</span>ATTRIBUTE <span class=\"k\">=</span> <span class=\"s\">\"ATTRIBUTE\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ELEMENT_TYPES<span class=\"k\">.</span>KEY <span class=\"k\">=</span> <span class=\"s\">\"KEY\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ELEMENT_TYPES<span class=\"k\">.</span>QUERY <span class=\"k\">=</span> <span class=\"s\">\"QUERY\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ELEMENT_TYPES<span class=\"k\">.</span>UNKNOWN <span class=\"k\">=</span> <span class=\"s\">\"UNKNOWN\"</span><span class=\"k\">;</span>","","<span class=\"c\">// values are from java.sql.Types</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>JAVA_SQL_TYPES <span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>JAVA_SQL_TYPES<span class=\"k\">.</span>NUMERIC <span class=\"k\">=</span> <span class=\"s\">2</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>JAVA_SQL_TYPES<span class=\"k\">.</span>VARCHAR <span class=\"k\">=</span> <span class=\"s\">12</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>JAVA_SQL_TYPES<span class=\"k\">.</span>BOOLEAN <span class=\"k\">=</span> <span class=\"s\">16</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>JAVA_SQL_TYPES<span class=\"k\">.</span>DATE <span class=\"k\">=</span> <span class=\"s\">91</span><span class=\"k\">;</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES <span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>SUM <span class=\"k\">=</span> <span class=\"s\">'SUM'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>AVERAGE <span class=\"k\">=</span> <span class=\"s\">'AVERAGE'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>MIN <span class=\"k\">=</span> <span class=\"s\">'MINIMUM'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>MAX <span class=\"k\">=</span> <span class=\"s\">'MAXIMUM'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>COUNT <span class=\"k\">=</span> <span class=\"s\">'COUNT'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>COUNT_DISTINCT <span class=\"k\">=</span> <span class=\"s\">'COUNT_DISTINCT'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>NONE <span class=\"k\">=</span> <span class=\"s\">'NONE'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>VAR <span class=\"k\">=</span> <span class=\"s\">'VAR'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>STDDEV <span class=\"k\">=</span> <span class=\"s\">'STDDEV'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>CALC <span class=\"k\">=</span> <span class=\"s\">'CALC'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>UNKNOWN <span class=\"k\">=</span> <span class=\"s\">'UNKNOWN'</span><span class=\"k\">;</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES_STRINGS <span class=\"k\">=</span> <span class=\"k\">{}</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES_STRINGS<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>SUM<span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>SUM<span class=\"k\">);</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES_STRINGS<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>AVERAGE<span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>AVERAGE<span class=\"k\">);</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES_STRINGS<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>MIN<span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>MIN<span class=\"k\">);</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES_STRINGS<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>MAX<span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>MAX<span class=\"k\">);</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES_STRINGS<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>COUNT<span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>COUNT<span class=\"k\">);</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES_STRINGS<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>COUNT_DISTINCT<span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>COUNT_DISTINCT<span class=\"k\">);</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES_STRINGS<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>NONE<span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>NONE<span class=\"k\">);</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES_STRINGS<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>VAR<span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>VAR<span class=\"k\">);</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES_STRINGS<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>STDDEV<span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>STDDEV<span class=\"k\">);</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES_STRINGS<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>CALC<span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>CALC<span class=\"k\">);</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES_STRINGS<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>UNKNOWN<span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>UNKNOWN<span class=\"k\">);</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPE_MAP <span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPE_MAP<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>NONE<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'none'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPE_MAP<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>SUM<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'sum'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPE_MAP<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>AVERAGE<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'average'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPE_MAP<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>MIN<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'min'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPE_MAP<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>MAX<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'max'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPE_MAP<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>COUNT<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'item-count'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPE_MAP<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>COUNT_DISTINCT<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'count-distinct'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPE_MAP<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>VAR<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'var'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPE_MAP<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>STDDEV<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'standard deviation'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPE_MAP<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>CALC<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'calculated'</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPE_MAP<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>AGG_TYPES<span class=\"k\">.</span>UNKNOWN<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">'unknown'</span><span class=\"k\">;</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>TYPE_TO_JAVA_SQL_TYPE <span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>TYPE_TO_JAVA_SQL_TYPE<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>NUMERIC <span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>JAVA_SQL_TYPES<span class=\"k\">.</span>NUMERIC<span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>TYPE_TO_JAVA_SQL_TYPE<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>STRING <span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>JAVA_SQL_TYPES<span class=\"k\">.</span>VARCHAR<span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>TYPE_TO_JAVA_SQL_TYPE<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>DATE <span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>JAVA_SQL_TYPES<span class=\"k\">.</span>DATE<span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>TYPE_TO_JAVA_SQL_TYPE<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>BOOLEAN <span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>JAVA_SQL_TYPES<span class=\"k\">.</span>BOOLEAN<span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>TYPE_TO_JAVA_SQL_TYPE<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>UNKNOWN <span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>JAVA_SQL_TYPES<span class=\"k\">.</span>VARCHAR<span class=\"k\">;</span>\t<span class=\"c\">// assume unknown will be a string</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>JAVA_SQL_TYPE_TO_TYPE <span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>JAVA_SQL_TYPE_TO_TYPE<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>JAVA_SQL_TYPES<span class=\"k\">.</span>NUMERIC <span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>NUMERIC<span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>JAVA_SQL_TYPE_TO_TYPE<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>JAVA_SQL_TYPES<span class=\"k\">.</span>VARCHAR <span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>STRING<span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>JAVA_SQL_TYPE_TO_TYPE<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>JAVA_SQL_TYPES<span class=\"k\">.</span>DATE <span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>DATE<span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>JAVA_SQL_TYPE_TO_TYPE<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>JAVA_SQL_TYPES<span class=\"k\">.</span>BOOLEAN <span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>BOOLEAN<span class=\"k\">;</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>COMPARATOR <span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>COMPARATOR<span class=\"k\">.</span>STRING <span class=\"k\">=</span> <span class=\"k\">[</span> ","\t<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"EXACTLY_MATCHES\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>EQUAL<span class=\"k\">],</span>","\t<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"CONTAINS\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>CONTAINS<span class=\"k\">],</span>","\t<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"ENDS_WITH\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>ENDSWITH<span class=\"k\">],</span>","\t<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"BEGINS_WITH\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>BEGINSWITH<span class=\"k\">],</span>","  <span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"DOES_NOT_CONTAIN\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>NOT_CONTAINS<span class=\"k\">],</span>","  <span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"IS_NULL\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>IS_NULL<span class=\"k\">],</span>","  <span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"IS_NOT_NULL\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>NOT_NULL<span class=\"k\">]];</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>COMPARATOR<span class=\"k\">.</span>NUMERIC <span class=\"k\">=</span> <span class=\"k\">[</span>","  <span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"EQUALS\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>EQUAL<span class=\"k\">],</span>","<span class=\"c\">//  [\"&lt;&gt;\", ],</span>","  <span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"MORE_THAN_OR_EQUAL\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>MORE_THAN_OR_EQUAL<span class=\"k\">],</span>","  <span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"LESS_THAN_OR_EQUAL\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>LESS_THAN_OR_EQUAL<span class=\"k\">],</span>","  <span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"MORE_THAN\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>MORE_THAN<span class=\"k\">],</span>","  <span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"LESS_THAN\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>LESS_THAN<span class=\"k\">],</span>","  <span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"IS_NULL\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>IS_NULL<span class=\"k\">],</span>","  <span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"IS_NOT_NULL\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>NOT_NULL<span class=\"k\">]];</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>COMPARATOR<span class=\"k\">.</span>BOOLEAN <span class=\"k\">=</span> <span class=\"k\">[</span>","  <span class=\"k\">[</span><span class=\"s\">\"=\"</span><span class=\"k\">,</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>EQUAL<span class=\"k\">],</span>","<span class=\"c\">//  [\"&lt;&gt;\", ],</span>","  <span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"IS_NULL\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>IS_NULL<span class=\"k\">],</span>","  <span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"IS_NOT_NULL\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>NOT_NULL<span class=\"k\">]];</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>COMPARATOR<span class=\"k\">.</span>DATE <span class=\"k\">=</span> <span class=\"k\">[</span> ","\t<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"ON\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>EQUAL<span class=\"k\">],</span>","<span class=\"c\">//\t[pentaho.common.Messages.getString( \"NOT_ON\" ),</span>","\t<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"ON_OR_AFTER\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>MORE_THAN_OR_EQUAL<span class=\"k\">],</span>","\t<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"ON_OR_BEFORE\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>LESS_THAN_OR_EQUAL<span class=\"k\">],</span>","\t<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"AFTER\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>MORE_THAN<span class=\"k\">],</span>","  <span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"BEFORE\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>LESS_THAN<span class=\"k\">],</span>","  <span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"IS_NULL\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>IS_NULL<span class=\"k\">],</span>","  <span class=\"k\">[</span>pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>Messages<span class=\"k\">.</span>getString<span class=\"k\">(</span> <span class=\"s\">\"IS_NOT_NULL\"</span> <span class=\"k\">),</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>NOT_NULL<span class=\"k\">]];</span>","","<span class=\"c\">//Comparators with no right-hand parameters (is null, etc).</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>SINGLE_COMPARATORS <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>SINGLE_COMPARATORS<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>IS_NULL<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>SINGLE_COMPARATORS<span class=\"k\">[</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>CONDITION_TYPES<span class=\"k\">.</span>NOT_NULL<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","  ","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>COMPARATOR_MAP <span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>COMPARATOR_MAP<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>NUMERIC <span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>COMPARATOR<span class=\"k\">.</span>NUMERIC<span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>COMPARATOR_MAP<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>STRING <span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>COMPARATOR<span class=\"k\">.</span>STRING<span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>COMPARATOR_MAP<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>DATE <span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>COMPARATOR<span class=\"k\">.</span>DATE<span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>COMPARATOR_MAP<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>BOOLEAN <span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>COMPARATOR<span class=\"k\">.</span>BOOLEAN<span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>COMPARATOR_MAP<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>UNKNOWN <span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>COMPARATOR<span class=\"k\">.</span>STRING<span class=\"k\">;</span>","","<span class=\"c\">/*static*/</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DEFAULT_FORMAT_BY_TYPE <span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DEFAULT_FORMAT_BY_TYPE<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>NUMERIC <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"default\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DEFAULT_FORMAT_BY_TYPE<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>STRING <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DEFAULT_FORMAT_BY_TYPE<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>DATE <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"default\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DEFAULT_FORMAT_BY_TYPE<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>BOOLEAN <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DEFAULT_FORMAT_BY_TYPE<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>UNKNOWN <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ALIGNMENT_TYPES <span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ALIGNMENT_TYPES<span class=\"k\">.</span>DEFAULT <span class=\"k\">=</span> <span class=\"s\">\"not-set\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ALIGNMENT_TYPES<span class=\"k\">.</span>LEFT <span class=\"k\">=</span> <span class=\"s\">\"left\"</span><span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ALIGNMENT_TYPES<span class=\"k\">.</span>RIGHT <span class=\"k\">=</span> <span class=\"s\">\"right\"</span><span class=\"k\">;</span>","","<span class=\"c\">/*static*/</span>pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DEFAULT_ALIGNMENT_BY_TYPE <span class=\"k\">=</span> <span class=\"k\">new</span> Object<span class=\"k\">();</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DEFAULT_ALIGNMENT_BY_TYPE<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>NUMERIC <span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ALIGNMENT_TYPES<span class=\"k\">.</span>DEFAULT<span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DEFAULT_ALIGNMENT_BY_TYPE<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>STRING <span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ALIGNMENT_TYPES<span class=\"k\">.</span>DEFAULT<span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DEFAULT_ALIGNMENT_BY_TYPE<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>DATE <span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ALIGNMENT_TYPES<span class=\"k\">.</span>DEFAULT<span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DEFAULT_ALIGNMENT_BY_TYPE<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>BOOLEAN <span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ALIGNMENT_TYPES<span class=\"k\">.</span>DEFAULT<span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DEFAULT_ALIGNMENT_BY_TYPE<span class=\"k\">[</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DATA_TYPES<span class=\"k\">.</span>UNKNOWN <span class=\"k\">]</span> <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>ALIGNMENT_TYPES<span class=\"k\">.</span>DEFAULT<span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * @param columnType String, one of the properties of the BVItem.TYPE Object.</span>","<span class=\"c\"> */</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>getDefaultFormat <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> columnType <span class=\"k\">)</span>","<span class=\"k\">{</span>","\t<span class=\"k\">return</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DEFAULT_FORMAT_BY_TYPE<span class=\"k\">[</span> columnType <span class=\"k\">];</span>","<span class=\"k\">}</span>","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>getDefaultAlignment <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> columnType <span class=\"k\">)</span>","<span class=\"k\">{</span>","\t<span class=\"k\">return</span> pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>Column<span class=\"k\">.</span>DEFAULT_ALIGNMENT_BY_TYPE<span class=\"k\">[</span> columnType <span class=\"k\">];</span>","<span class=\"k\">}</span>","","","<span class=\"c\">// TODO move this stuff to a helper object</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getColumnFromList <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> list <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(</span> list <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> itemId <span class=\"k\">=</span> list<span class=\"k\">.</span>value<span class=\"k\">;</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>getColumnById<span class=\"k\">(</span> itemId <span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","pentaho<span class=\"k\">.</span>pda<span class=\"k\">.</span>model<span class=\"k\">.</span>prototype<span class=\"k\">.</span>populateListControl <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> list<span class=\"k\">,</span> fieldTypes<span class=\"k\">,</span> sorted<span class=\"k\">,</span> selectedItem <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">var</span> cols <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getColumnsByFieldTypes<span class=\"k\">(</span>fieldTypes<span class=\"k\">);</span>","        <span class=\"k\">if</span><span class=\"k\">(</span> sorted <span class=\"k\">==</span> <span class=\"k\">true</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            cols <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>sortColumnsByName<span class=\"k\">(</span> cols <span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">var</span> ops <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>createListOptions<span class=\"k\">(</span> cols <span class=\"k\">);</span>","        <span class=\"k\">var</span> options <span class=\"k\">=</span> list<span class=\"k\">.</span>options<span class=\"k\">;</span>","        <span class=\"k\">var</span> selectedId <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">if</span><span class=\"k\">(</span> selectedItem <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span><span class=\"k\">(</span> selectedItem<span class=\"k\">.</span>id <span class=\"k\">)</span> <span class=\"k\">{</span>","                selectedId <span class=\"k\">=</span> selectedItem<span class=\"k\">.</span>id<span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                selectedId <span class=\"k\">=</span> selectedItem<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">var</span> selectedIdx <span class=\"k\">=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">for</span><span class=\"k\">(</span> colNo <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> colNo <span class=\"k\">&lt;</span> ops<span class=\"k\">.</span>length<span class=\"k\">;</span> colNo<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            options<span class=\"k\">[</span>options<span class=\"k\">.</span>length<span class=\"k\">]</span> <span class=\"k\">=</span> ops<span class=\"k\">[</span>colNo<span class=\"k\">];</span>","            <span class=\"k\">if</span><span class=\"k\">(</span> ops<span class=\"k\">[</span>colNo<span class=\"k\">].</span>value <span class=\"k\">==</span> selectedId <span class=\"k\">)</span> <span class=\"k\">{</span>","                selectedIdx <span class=\"k\">=</span> colNo<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        list<span class=\"k\">.</span>selectedIndex <span class=\"k\">=</span> selectedIdx<span class=\"k\">;</span>","","    <span class=\"k\">}</span>","    ",""];
_$jscoverage['dataapi/controller.js'][3]++;
dojo.require("pentaho.common.Messages");
_$jscoverage['dataapi/controller.js'][5]++;
pentaho = (((typeof pentaho) == "undefined")? {}: pentaho);
_$jscoverage['dataapi/controller.js'][7]++;
pentaho.pda = (pentaho.pda || {});
_$jscoverage['dataapi/controller.js'][9]++;
pentaho.pda.SOURCE_TYPE_OLAP = "olap";
_$jscoverage['dataapi/controller.js'][10]++;
pentaho.pda.SOURCE_TYPE_MQL = "mql";
_$jscoverage['dataapi/controller.js'][11]++;
pentaho.pda.SOURCE_TYPE_SQL = "sql";
_$jscoverage['dataapi/controller.js'][12]++;
pentaho.pda.SOURCE_TYPE_ETL = "etl";
_$jscoverage['dataapi/controller.js'][13]++;
pentaho.pda.SOURCE_TYPE_CDA = "cda";
_$jscoverage['dataapi/controller.js'][15]++;
pentaho.pda.modelaccess = {};
_$jscoverage['dataapi/controller.js'][17]++;
pentaho.common.Messages.addUrlBundle("dataapi", (CONTEXT_PATH + "i18n?plugin=common-ui&name=resources/web/dataapi/nls/messages"));
_$jscoverage['dataapi/controller.js'][22]++;
pentaho.pda.app = (function () {
  _$jscoverage['dataapi/controller.js'][23]++;
  pentaho.app.call(this);
  _$jscoverage['dataapi/controller.js'][24]++;
  this.sources = [];
  _$jscoverage['dataapi/controller.js'][25]++;
  this.attempts = 0;
});
_$jscoverage['dataapi/controller.js'][28]++;
inheritPrototype(pentaho.pda.app, pentaho.app);
_$jscoverage['dataapi/controller.js'][30]++;
pentaho.pda.app.prototype.discoverSources = (function (callback, options) {
  _$jscoverage['dataapi/controller.js'][32]++;
  var md = this.moduleData, handler, that = this, sources = [];
  _$jscoverage['dataapi/controller.js'][33]++;
  for (var src in md) {
    _$jscoverage['dataapi/controller.js'][34]++;
    if ((! this.moduleData.hasOwnProperty(src))) {
      _$jscoverage['dataapi/controller.js'][35]++;
      continue;
    }
    _$jscoverage['dataapi/controller.js'][37]++;
    var h = md[src].instance;
    _$jscoverage['dataapi/controller.js'][38]++;
    if ((h instanceof pentaho.pda.Handler)) {
      _$jscoverage['dataapi/controller.js'][39]++;
      h.getSources((function (source) {
  _$jscoverage['dataapi/controller.js'][41]++;
  that.addSource(source);
  _$jscoverage['dataapi/controller.js'][42]++;
  sources.push(source);
  _$jscoverage['dataapi/controller.js'][43]++;
  if (callback) {
    _$jscoverage['dataapi/controller.js'][44]++;
    callback(source);
  }
}), options);
    }
    else {
      _$jscoverage['dataapi/controller.js'][49]++;
      throw new Error((md[src].name + " is not an instanceof pentaho.pda.Handler"));
    }
}
  _$jscoverage['dataapi/controller.js'][53]++;
  return sources;
});
_$jscoverage['dataapi/controller.js'][56]++;
pentaho.pda.app.prototype.getSources = (function (callback, options) {
  _$jscoverage['dataapi/controller.js'][58]++;
  var i, j, _sources = [], each;
  _$jscoverage['dataapi/controller.js'][59]++;
  options = (options || {});
  _$jscoverage['dataapi/controller.js'][60]++;
  var filter = options.filter;
  _$jscoverage['dataapi/controller.js'][61]++;
  if ((this.sources.length > 0)) {
    _$jscoverage['dataapi/controller.js'][63]++;
    if ((filter == null)) {
      _$jscoverage['dataapi/controller.js'][65]++;
      for (var i = 0, j = this.sources.length; (i < j); (i++)) {
        _$jscoverage['dataapi/controller.js'][66]++;
        if (callback) {
          _$jscoverage['dataapi/controller.js'][67]++;
          callback(this.sources[i]);
        }
}
    }
    else {
      _$jscoverage['dataapi/controller.js'][73]++;
      _sources = [];
      _$jscoverage['dataapi/controller.js'][74]++;
      for (var i = 0; (i < this.sources.length); (i++)) {
        _$jscoverage['dataapi/controller.js'][75]++;
        each = this.sources[i];
        _$jscoverage['dataapi/controller.js'][76]++;
        try {
          _$jscoverage['dataapi/controller.js'][77]++;
          if ((each[filter.property] == filter.value)) {
            _$jscoverage['dataapi/controller.js'][78]++;
            _sources.push(each);
            _$jscoverage['dataapi/controller.js'][79]++;
            if (callback) {
              _$jscoverage['dataapi/controller.js'][80]++;
              callback(each);
            }
          }
        }
        catch (e) {
        }
}
      _$jscoverage['dataapi/controller.js'][87]++;
      if ((_sources.length == 1)) {
        _$jscoverage['dataapi/controller.js'][88]++;
        return _sources[0];
      }
      else {
        _$jscoverage['dataapi/controller.js'][90]++;
        return _sources;
      }
    }
    _$jscoverage['dataapi/controller.js'][93]++;
    if ((this.sources.length == 1)) {
      _$jscoverage['dataapi/controller.js'][94]++;
      return this.sources[0];
    }
    else {
      _$jscoverage['dataapi/controller.js'][97]++;
      return this.sources;
    }
  }
  else {
    _$jscoverage['dataapi/controller.js'][101]++;
    var that = this;
    _$jscoverage['dataapi/controller.js'][102]++;
    this.discoverSources((function (source) {
  _$jscoverage['dataapi/controller.js'][104]++;
  if ((filter == null)) {
    _$jscoverage['dataapi/controller.js'][105]++;
    _sources.push(source);
    _$jscoverage['dataapi/controller.js'][106]++;
    if (callback) {
      _$jscoverage['dataapi/controller.js'][107]++;
      callback(source);
    }
  }
  else {
    _$jscoverage['dataapi/controller.js'][110]++;
    try {
      _$jscoverage['dataapi/controller.js'][111]++;
      if ((source[filter.property] == filter.value)) {
        _$jscoverage['dataapi/controller.js'][112]++;
        _sources.push(source);
        _$jscoverage['dataapi/controller.js'][113]++;
        if (callback) {
          _$jscoverage['dataapi/controller.js'][114]++;
          callback(source);
        }
      }
      else {
      }
    }
    catch (e) {
    }
  }
}), options);
    _$jscoverage['dataapi/controller.js'][126]++;
    if ((_sources.length == 1)) {
      _$jscoverage['dataapi/controller.js'][127]++;
      return _sources[0];
    }
    else {
      _$jscoverage['dataapi/controller.js'][129]++;
      return _sources;
    }
  }
});
_$jscoverage['dataapi/controller.js'][136]++;
pentaho.pda.app.prototype.addSource = (function (source) {
  _$jscoverage['dataapi/controller.js'][137]++;
  this.sources.push(source);
});
_$jscoverage['dataapi/controller.js'][140]++;
pentaho.pda.app.prototype.sortData = (function (results, columnIdx, direction) {
  _$jscoverage['dataapi/controller.js'][142]++;
  if ((columnIdx == -1)) {
    _$jscoverage['dataapi/controller.js'][144]++;
    return;
  }
  _$jscoverage['dataapi/controller.js'][147]++;
  var sorted = {"metadata": results.metadata, "resultset": []};
  _$jscoverage['dataapi/controller.js'][153]++;
  try {
    _$jscoverage['dataapi/controller.js'][155]++;
    pentaho.pda.app.prototype.sortedColumnIdx = columnIdx;
    _$jscoverage['dataapi/controller.js'][156]++;
    pentaho.pda.app.prototype.sortDirection = direction;
    _$jscoverage['dataapi/controller.js'][157]++;
    sorted.resultset = results.resultset.sort(pentaho.pda.app.prototype.compareRows);
  }
  catch (e) {
    _$jscoverage['dataapi/controller.js'][159]++;
    alert(e.message);
  }
  _$jscoverage['dataapi/controller.js'][161]++;
  return sorted;
});
_$jscoverage['dataapi/controller.js'][165]++;
pentaho.pda.app.prototype.sortedColumnIdx = -1;
_$jscoverage['dataapi/controller.js'][166]++;
pentaho.pda.app.prototype.sortDirection = null;
_$jscoverage['dataapi/controller.js'][168]++;
pentaho.pda.app.prototype.compareRows = (function (row1, row2) {
  _$jscoverage['dataapi/controller.js'][169]++;
  if ((row1[pentaho.pda.app.prototype.sortedColumnIdx] == row2[pentaho.pda.app.prototype.sortedColumnIdx])) {
    _$jscoverage['dataapi/controller.js'][170]++;
    return 0;
  }
  _$jscoverage['dataapi/controller.js'][172]++;
  if ((pentaho.pda.app.prototype.sortDirection == pentaho.pda.Column.SORT_TYPES.ASCENDING)) {
    _$jscoverage['dataapi/controller.js'][173]++;
    return ((row1[pentaho.pda.app.prototype.sortedColumnIdx] > row2[pentaho.pda.app.prototype.sortedColumnIdx])? 1: -1);
  }
  else {
    _$jscoverage['dataapi/controller.js'][175]++;
    return ((row1[pentaho.pda.app.prototype.sortedColumnIdx] < row2[pentaho.pda.app.prototype.sortedColumnIdx])? 1: -1);
  }
});
_$jscoverage['dataapi/controller.js'][179]++;
pentaho.pda.Handler = (function (sandbox) {
  _$jscoverage['dataapi/controller.js'][180]++;
  this.sandbox = sandbox;
  _$jscoverage['dataapi/controller.js'][181]++;
  this.sources = [];
});
_$jscoverage['dataapi/controller.js'][184]++;
pentaho.pda.Handler.prototype.init = (function init() {
});
_$jscoverage['dataapi/controller.js'][190]++;
pentaho.pda.model = (function (obj) {
  _$jscoverage['dataapi/controller.js'][191]++;
  this.id = (obj.id || 1);
  _$jscoverage['dataapi/controller.js'][192]++;
  this.name = (obj.name || "unknown");
  _$jscoverage['dataapi/controller.js'][193]++;
  this.type = (obj.type || "unknown");
  _$jscoverage['dataapi/controller.js'][194]++;
  this.description = (obj.description || "");
  _$jscoverage['dataapi/controller.js'][195]++;
  this.elements = (obj.elements || []);
  _$jscoverage['dataapi/controller.js'][196]++;
  this.capabilities = (obj.capabilities || {});
  _$jscoverage['dataapi/controller.js'][197]++;
  this.categories = [];
});
_$jscoverage['dataapi/controller.js'][200]++;
pentaho.pda.model.prototype.getCategories = (function () {
  _$jscoverage['dataapi/controller.js'][201]++;
  return this.categories;
});
_$jscoverage['dataapi/controller.js'][204]++;
pentaho.pda.model.prototype.getNodeText = (function (node, tag) {
  _$jscoverage['dataapi/controller.js'][205]++;
  for (var idx = 0; (idx < node.childNodes.length); (idx++)) {
    _$jscoverage['dataapi/controller.js'][206]++;
    if ((node.childNodes[idx].nodeName == tag)) {
      _$jscoverage['dataapi/controller.js'][207]++;
      return this.getText(node.childNodes[idx]);
    }
}
  _$jscoverage['dataapi/controller.js'][210]++;
  return null;
});
_$jscoverage['dataapi/controller.js'][213]++;
pentaho.pda.model.prototype.getNodeTextOfChild = (function (node, tag1, tag2) {
  _$jscoverage['dataapi/controller.js'][214]++;
  for (var idx = 0; (idx < node.childNodes.length); (idx++)) {
    _$jscoverage['dataapi/controller.js'][215]++;
    if ((node.childNodes[idx].nodeName == tag1)) {
      _$jscoverage['dataapi/controller.js'][216]++;
      return this.getNodeText(node.childNodes[idx], tag2);
    }
}
  _$jscoverage['dataapi/controller.js'][219]++;
  return null;
});
_$jscoverage['dataapi/controller.js'][222]++;
pentaho.pda.model.prototype.getText = (function (node) {
  _$jscoverage['dataapi/controller.js'][223]++;
  if (((! node) || (! node.firstChild))) {
    _$jscoverage['dataapi/controller.js'][223]++;
    return null;
  }
  _$jscoverage['dataapi/controller.js'][224]++;
  if (((typeof node.textContent) != "undefined")) {
    _$jscoverage['dataapi/controller.js'][224]++;
    return node.textContent;
  }
  _$jscoverage['dataapi/controller.js'][225]++;
  return node.firstChild.nodeValue;
});
_$jscoverage['dataapi/controller.js'][228]++;
pentaho.pda.model.prototype.hasCapability = (function (capability) {
  _$jscoverage['dataapi/controller.js'][229]++;
  var value = this.capabilities[capability];
  _$jscoverage['dataapi/controller.js'][230]++;
  if (((typeof value) == "undefined")) {
    _$jscoverage['dataapi/controller.js'][231]++;
    return false;
  }
  _$jscoverage['dataapi/controller.js'][233]++;
  return true;
});
_$jscoverage['dataapi/controller.js'][236]++;
pentaho.pda.model.prototype.getCapabilityValue = (function (capability) {
  _$jscoverage['dataapi/controller.js'][237]++;
  return this.capabilities[capability];
});
_$jscoverage['dataapi/controller.js'][240]++;
pentaho.pda.model.prototype.addCapability = (function (capability, value) {
  _$jscoverage['dataapi/controller.js'][241]++;
  if (((typeof value) == "undefined")) {
    _$jscoverage['dataapi/controller.js'][242]++;
    value = true;
  }
  _$jscoverage['dataapi/controller.js'][244]++;
  this.capabilities[capability] = value;
});
_$jscoverage['dataapi/controller.js'][247]++;
pentaho.pda.model.prototype.getCapabilityNames = (function () {
  _$jscoverage['dataapi/controller.js'][248]++;
  var list = new Array();
  _$jscoverage['dataapi/controller.js'][249]++;
  for (x in this.capabilities) {
    _$jscoverage['dataapi/controller.js'][250]++;
    list.push(x);
}
  _$jscoverage['dataapi/controller.js'][252]++;
  return list;
});
_$jscoverage['dataapi/controller.js'][255]++;
pentaho.pda.model.prototype.addElement = (function (element) {
  _$jscoverage['dataapi/controller.js'][256]++;
  this.elements.push(element);
});
_$jscoverage['dataapi/controller.js'][259]++;
pentaho.pda.model.prototype.getAllElements = (function () {
  _$jscoverage['dataapi/controller.js'][260]++;
  return this.elements;
});
_$jscoverage['dataapi/controller.js'][263]++;
pentaho.pda.model.prototype.getElementsOfType = (function (type) {
  _$jscoverage['dataapi/controller.js'][264]++;
  return this.getElementsOfTypes(new Array(type));
});
_$jscoverage['dataapi/controller.js'][267]++;
pentaho.pda.model.prototype.getElementsOfTypes = (function (types) {
  _$jscoverage['dataapi/controller.js'][268]++;
  var elements = new Array();
  _$jscoverage['dataapi/controller.js'][269]++;
  for (var idx = 0; (idx < this.elements.length); (idx++)) {
    _$jscoverage['dataapi/controller.js'][270]++;
    for (var typeNo = 0; (typeNo < types.length); (typeNo++)) {
      _$jscoverage['dataapi/controller.js'][271]++;
      if ((this.elements[idx].elementType == types[typeNo])) {
        _$jscoverage['dataapi/controller.js'][272]++;
        elements.push(this.elements[idx]);
      }
}
}
  _$jscoverage['dataapi/controller.js'][276]++;
  return elements;
});
_$jscoverage['dataapi/controller.js'][279]++;
pentaho.pda.model.prototype.getElementsOfDataType = (function (type) {
  _$jscoverage['dataapi/controller.js'][280]++;
  return this.getElementsOfDataTypes(new Array(type));
});
_$jscoverage['dataapi/controller.js'][283]++;
pentaho.pda.model.prototype.getElementsOfDataTypes = (function (types) {
  _$jscoverage['dataapi/controller.js'][284]++;
  var elements = new Array();
  _$jscoverage['dataapi/controller.js'][285]++;
  for (var idx = 0; (idx < this.elements.length); (idx++)) {
    _$jscoverage['dataapi/controller.js'][286]++;
    for (var typeNo = 0; (typeNo < types.length); (typeNo++)) {
      _$jscoverage['dataapi/controller.js'][287]++;
      if ((this.elements[idx].dataType == types[typeNo])) {
        _$jscoverage['dataapi/controller.js'][288]++;
        elements.push(this.elements[idx]);
      }
}
}
  _$jscoverage['dataapi/controller.js'][292]++;
  return elements;
});
_$jscoverage['dataapi/controller.js'][295]++;
pentaho.pda.model.prototype.getQueryElementsByFieldType = (function (fieldType) {
  _$jscoverage['dataapi/controller.js'][296]++;
  var fieldTypes = new Array();
  _$jscoverage['dataapi/controller.js'][297]++;
  fieldTypes.push(fieldType);
  _$jscoverage['dataapi/controller.js'][298]++;
  return this.getColumnsByFieldTypes(fieldTypes, false);
});
_$jscoverage['dataapi/controller.js'][301]++;
pentaho.pda.model.prototype.getColumnsByFieldType = (function (fieldType) {
  _$jscoverage['dataapi/controller.js'][302]++;
  var fieldTypes = new Array();
  _$jscoverage['dataapi/controller.js'][303]++;
  fieldTypes.push(fieldType);
  _$jscoverage['dataapi/controller.js'][304]++;
  return this.getColumnsByFieldTypes(fieldTypes, true);
});
_$jscoverage['dataapi/controller.js'][307]++;
pentaho.pda.model.prototype.getColumnsByFieldTypes = (function (fieldTypes, allElements) {
  _$jscoverage['dataapi/controller.js'][308]++;
  var cols = this.getAllColumns();
  _$jscoverage['dataapi/controller.js'][309]++;
  var columns = new Array();
  _$jscoverage['dataapi/controller.js'][310]++;
  if ((! fieldTypes)) {
    _$jscoverage['dataapi/controller.js'][311]++;
    return cols;
  }
  _$jscoverage['dataapi/controller.js'][313]++;
  for (var colNo = 0; (colNo < cols.length); (colNo++)) {
    _$jscoverage['dataapi/controller.js'][314]++;
    for (var typeNo = 0; (typeNo < fieldTypes.length); (typeNo++)) {
      _$jscoverage['dataapi/controller.js'][315]++;
      if (((cols[colNo].elementType == fieldTypes[typeNo]) && (cols[colNo].isQueryElement || allElements))) {
        _$jscoverage['dataapi/controller.js'][316]++;
        columns.push(cols[colNo]);
      }
}
}
  _$jscoverage['dataapi/controller.js'][320]++;
  return columns;
});
_$jscoverage['dataapi/controller.js'][323]++;
pentaho.pda.model.prototype.getQueryElementsByDataType = (function (dataType) {
  _$jscoverage['dataapi/controller.js'][324]++;
  var dataTypes = new Array();
  _$jscoverage['dataapi/controller.js'][325]++;
  dataTypes.push(dataType);
  _$jscoverage['dataapi/controller.js'][326]++;
  return this.getColumnsByDataTypes(dataTypes, false);
});
_$jscoverage['dataapi/controller.js'][329]++;
pentaho.pda.model.prototype.getColumnsByDataType = (function (dataType) {
  _$jscoverage['dataapi/controller.js'][330]++;
  var dataTypes = new Array();
  _$jscoverage['dataapi/controller.js'][331]++;
  dataTypes.push(dataType);
  _$jscoverage['dataapi/controller.js'][332]++;
  return this.getColumnsByDataTypes(dataTypes, true);
});
_$jscoverage['dataapi/controller.js'][335]++;
pentaho.pda.model.prototype.getColumnsByDataTypes = (function (dataTypes, allElements) {
  _$jscoverage['dataapi/controller.js'][336]++;
  var cols = this.getAllColumns();
  _$jscoverage['dataapi/controller.js'][337]++;
  var columns = new Array();
  _$jscoverage['dataapi/controller.js'][338]++;
  if ((! dataTypes)) {
    _$jscoverage['dataapi/controller.js'][339]++;
    return cols;
  }
  _$jscoverage['dataapi/controller.js'][341]++;
  for (var colNo = 0; (colNo < cols.length); (colNo++)) {
    _$jscoverage['dataapi/controller.js'][342]++;
    for (var typeNo = 0; (typeNo < dataTypes.length); (typeNo++)) {
      _$jscoverage['dataapi/controller.js'][343]++;
      if (((cols[colNo].dataType == dataTypes[typeNo]) && (cols[colNo].isQueryElement || allElements))) {
        _$jscoverage['dataapi/controller.js'][344]++;
        columns.push(cols[colNo]);
      }
}
}
  _$jscoverage['dataapi/controller.js'][348]++;
  return columns;
});
_$jscoverage['dataapi/controller.js'][351]++;
pentaho.pda.model.prototype.getColumnById = (function (id) {
  _$jscoverage['dataapi/controller.js'][352]++;
  var cols = this.getAllColumns();
  _$jscoverage['dataapi/controller.js'][353]++;
  for (var colNo = 0; (colNo < cols.length); (colNo++)) {
    _$jscoverage['dataapi/controller.js'][354]++;
    if ((cols[colNo].id == id)) {
      _$jscoverage['dataapi/controller.js'][355]++;
      return cols[colNo];
    }
}
  _$jscoverage['dataapi/controller.js'][358]++;
  return null;
});
_$jscoverage['dataapi/controller.js'][361]++;
pentaho.pda.model.prototype.sortColumnsByName = (function (columns) {
  _$jscoverage['dataapi/controller.js'][362]++;
  return columns.sort((function (c1, c2) {
  _$jscoverage['dataapi/controller.js'][362]++;
  return ((c1.name == c2.name)? 0: ((c1.name > c2.name)? 1: -1));
}));
});
_$jscoverage['dataapi/controller.js'][365]++;
pentaho.pda.model.prototype.createListOptions = (function (columnList) {
  _$jscoverage['dataapi/controller.js'][366]++;
  var options = new Array();
  _$jscoverage['dataapi/controller.js'][367]++;
  for (var idx = 0; (idx < columnList.length); (idx++)) {
    _$jscoverage['dataapi/controller.js'][368]++;
    var option = new Option(columnList[idx].name, columnList[idx].id);
    _$jscoverage['dataapi/controller.js'][369]++;
    options.push(option);
}
  _$jscoverage['dataapi/controller.js'][371]++;
  return options;
});
_$jscoverage['dataapi/controller.js'][374]++;
pentaho.pda.model.prototype.populateListFromResults = (function (valuesList, results, textColumnNumber, valueColumnNumber) {
  _$jscoverage['dataapi/controller.js'][375]++;
  var hasValues = false;
  _$jscoverage['dataapi/controller.js'][376]++;
  if ((("" + valueColumnNumber) != "undefined")) {
    _$jscoverage['dataapi/controller.js'][377]++;
    if (((valueColumnNumber >= 0) && (valueColumnNumber < results.columnNames.length))) {
      _$jscoverage['dataapi/controller.js'][378]++;
      hasValues = true;
    }
  }
  _$jscoverage['dataapi/controller.js'][381]++;
  if (results.resultset) {
    _$jscoverage['dataapi/controller.js'][383]++;
    for (var idx = 0; (idx < results.resultset.length); (idx++)) {
      _$jscoverage['dataapi/controller.js'][384]++;
      var option;
      _$jscoverage['dataapi/controller.js'][385]++;
      if (hasValues) {
        _$jscoverage['dataapi/controller.js'][386]++;
        option = new Option(results.resultset[idx][textColumnNumber], results.resultset[idx][valueColumnNumber]);
      }
      else {
        _$jscoverage['dataapi/controller.js'][388]++;
        option = new Option(results.resultset[idx][textColumnNumber]);
      }
      _$jscoverage['dataapi/controller.js'][390]++;
      valuesList.options[valuesList.options.length] = option;
}
  }
  else {
    _$jscoverage['dataapi/controller.js'][393]++;
    if (results.jsonTable) {
      _$jscoverage['dataapi/controller.js'][394]++;
      for (var idx = 0; (idx < results.getNumberOfRows()); (idx++)) {
        _$jscoverage['dataapi/controller.js'][395]++;
        var option = option;
        _$jscoverage['dataapi/controller.js'][396]++;
        if (hasValues) {
          _$jscoverage['dataapi/controller.js'][397]++;
          option = new Option(results.getFormattedValue(idx, textColumnNumber), results.getFormattedValue(idx, valueColumnNumber));
        }
        else {
          _$jscoverage['dataapi/controller.js'][399]++;
          option = new Option(results.getFormattedValue(idx, textColumnNumber));
        }
        _$jscoverage['dataapi/controller.js'][401]++;
        valuesList.options[valuesList.options.length] = option;
}
    }
  }
});
_$jscoverage['dataapi/controller.js'][407]++;
pentaho.pda.dataelement = (function () {
  _$jscoverage['dataapi/controller.js'][408]++;
  this.dataType = pentaho.pda.Column.DATA_TYPES.UNKNOWN;
  _$jscoverage['dataapi/controller.js'][409]++;
  this.elementType = pentaho.pda.Column.ELEMENT_TYPES.UNKNOWN;
  _$jscoverage['dataapi/controller.js'][410]++;
  this.id = "";
  _$jscoverage['dataapi/controller.js'][411]++;
  this.name = "";
  _$jscoverage['dataapi/controller.js'][412]++;
  this.description = "";
  _$jscoverage['dataapi/controller.js'][413]++;
  this.defaultAggregation = pentaho.pda.Column.AGG_TYPES.NONE;
  _$jscoverage['dataapi/controller.js'][414]++;
  this.selectedAggregation = pentaho.pda.Column.AGG_TYPES.NONE;
  _$jscoverage['dataapi/controller.js'][415]++;
  this.availableAggregations = new Array();
  _$jscoverage['dataapi/controller.js'][416]++;
  this.parent = null;
  _$jscoverage['dataapi/controller.js'][417]++;
  this.children = new Array();
  _$jscoverage['dataapi/controller.js'][418]++;
  this.isQueryElement = false;
  _$jscoverage['dataapi/controller.js'][419]++;
  this.capabilities = {};
});
_$jscoverage['dataapi/controller.js'][422]++;
pentaho.pda.dataelement.prototype.addChild = (function (child) {
  _$jscoverage['dataapi/controller.js'][423]++;
  this.children.push(child);
});
_$jscoverage['dataapi/controller.js'][426]++;
pentaho.pda.query = (function (model) {
  _$jscoverage['dataapi/controller.js'][427]++;
  this.model = model;
});
_$jscoverage['dataapi/controller.js'][432]++;
pentaho.pda.AXIS_LOCATION_ACROSS = "across";
_$jscoverage['dataapi/controller.js'][433]++;
pentaho.pda.AXIS_LOCATION_DOWN = "down";
_$jscoverage['dataapi/controller.js'][434]++;
pentaho.pda.AXIS_LOCATION_SLICER = "slicer";
_$jscoverage['dataapi/controller.js'][436]++;
pentaho.pda.SORT_DIRECTION_ASC = "ASC";
_$jscoverage['dataapi/controller.js'][437]++;
pentaho.pda.SORT_DIRECTION_DESC = "DESC";
_$jscoverage['dataapi/controller.js'][439]++;
pentaho.pda.MODEL = {};
_$jscoverage['dataapi/controller.js'][440]++;
pentaho.pda.CAPABILITIES = new Object();
_$jscoverage['dataapi/controller.js'][441]++;
pentaho.pda.CAPABILITIES.HAS_ACROSS_AXIS = "across-axis";
_$jscoverage['dataapi/controller.js'][442]++;
pentaho.pda.CAPABILITIES.IS_ACROSS_CUSTOM = "across-axis-customizable";
_$jscoverage['dataapi/controller.js'][443]++;
pentaho.pda.CAPABILITIES.HAS_DOWN_AXIS = "down-axis";
_$jscoverage['dataapi/controller.js'][444]++;
pentaho.pda.CAPABILITIES.IS_DOWN_CUSTOM = "down-axis-customizable";
_$jscoverage['dataapi/controller.js'][445]++;
pentaho.pda.CAPABILITIES.HAS_FILTERS = "filter-axis";
_$jscoverage['dataapi/controller.js'][446]++;
pentaho.pda.CAPABILITIES.IS_FILTER_CUSTOM = "filter-axis-customizable";
_$jscoverage['dataapi/controller.js'][447]++;
pentaho.pda.CAPABILITIES.CAN_SORT = "sortable";
_$jscoverage['dataapi/controller.js'][449]++;
pentaho.pda.Column = {};
_$jscoverage['dataapi/controller.js'][450]++;
pentaho.pda.Column.SORT_TYPES = new Object();
_$jscoverage['dataapi/controller.js'][451]++;
pentaho.pda.Column.SORT_TYPES.ASCENDING = "ASC";
_$jscoverage['dataapi/controller.js'][452]++;
pentaho.pda.Column.SORT_TYPES.DESCENDING = "DESC";
_$jscoverage['dataapi/controller.js'][454]++;
pentaho.pda.Column.OPERATOR_TYPES = new Object();
_$jscoverage['dataapi/controller.js'][455]++;
pentaho.pda.Column.OPERATOR_TYPES.OR = "OR";
_$jscoverage['dataapi/controller.js'][456]++;
pentaho.pda.Column.OPERATOR_TYPES.OR_NOT = "OR NOT";
_$jscoverage['dataapi/controller.js'][457]++;
pentaho.pda.Column.OPERATOR_TYPES.AND = "AND";
_$jscoverage['dataapi/controller.js'][458]++;
pentaho.pda.Column.OPERATOR_TYPES.AND_NOT = "AND NOT";
_$jscoverage['dataapi/controller.js'][460]++;
pentaho.pda.Column.CONDITION_TYPES = new Object();
_$jscoverage['dataapi/controller.js'][461]++;
pentaho.pda.Column.CONDITION_TYPES.LIKE = "LIKE";
_$jscoverage['dataapi/controller.js'][462]++;
pentaho.pda.Column.CONDITION_TYPES.BEGINSWITH = "BEGINS WITH";
_$jscoverage['dataapi/controller.js'][463]++;
pentaho.pda.Column.CONDITION_TYPES.ENDSWITH = "ENDS WITH";
_$jscoverage['dataapi/controller.js'][464]++;
pentaho.pda.Column.CONDITION_TYPES.CONTAINS = "CONTAINS";
_$jscoverage['dataapi/controller.js'][465]++;
pentaho.pda.Column.CONDITION_TYPES.NOT_CONTAINS = "DOES NOT CONTAIN";
_$jscoverage['dataapi/controller.js'][466]++;
pentaho.pda.Column.CONDITION_TYPES.EQUAL = "EQUAL";
_$jscoverage['dataapi/controller.js'][467]++;
pentaho.pda.Column.CONDITION_TYPES.LESS_THAN = "<";
_$jscoverage['dataapi/controller.js'][468]++;
pentaho.pda.Column.CONDITION_TYPES.LESS_THAN_OR_EQUAL = "<=";
_$jscoverage['dataapi/controller.js'][469]++;
pentaho.pda.Column.CONDITION_TYPES.MORE_THAN = ">";
_$jscoverage['dataapi/controller.js'][470]++;
pentaho.pda.Column.CONDITION_TYPES.MORE_THAN_OR_EQUAL = ">=";
_$jscoverage['dataapi/controller.js'][471]++;
pentaho.pda.Column.CONDITION_TYPES.IS_NULL = "IS NULL";
_$jscoverage['dataapi/controller.js'][472]++;
pentaho.pda.Column.CONDITION_TYPES.NOT_NULL = "IS NOT NULL";
_$jscoverage['dataapi/controller.js'][474]++;
pentaho.pda.Column.DATA_TYPES = new Object();
_$jscoverage['dataapi/controller.js'][475]++;
pentaho.pda.Column.DATA_TYPES.NUMERIC = "NUMERIC";
_$jscoverage['dataapi/controller.js'][476]++;
pentaho.pda.Column.DATA_TYPES.STRING = "STRING";
_$jscoverage['dataapi/controller.js'][477]++;
pentaho.pda.Column.DATA_TYPES.DATE = "DATE";
_$jscoverage['dataapi/controller.js'][478]++;
pentaho.pda.Column.DATA_TYPES.BOOLEAN = "BOOLEAN";
_$jscoverage['dataapi/controller.js'][479]++;
pentaho.pda.Column.DATA_TYPES.UNKNOWN = "UNKNOWN";
_$jscoverage['dataapi/controller.js'][480]++;
pentaho.pda.Column.DATA_TYPES.NONE = "NONE";
_$jscoverage['dataapi/controller.js'][482]++;
pentaho.pda.Column.ELEMENT_TYPES = new Object();
_$jscoverage['dataapi/controller.js'][483]++;
pentaho.pda.Column.ELEMENT_TYPES.CATEGORY = "CATEGORY";
_$jscoverage['dataapi/controller.js'][484]++;
pentaho.pda.Column.ELEMENT_TYPES.CUBE = "CUBE";
_$jscoverage['dataapi/controller.js'][485]++;
pentaho.pda.Column.ELEMENT_TYPES.DIMENSION = "DIMENSION";
_$jscoverage['dataapi/controller.js'][486]++;
pentaho.pda.Column.ELEMENT_TYPES.HIERARCHY = "HIERARCHY";
_$jscoverage['dataapi/controller.js'][487]++;
pentaho.pda.Column.ELEMENT_TYPES.LEVEL = "LEVEL";
_$jscoverage['dataapi/controller.js'][488]++;
pentaho.pda.Column.ELEMENT_TYPES.MEMBER = "MEMBER";
_$jscoverage['dataapi/controller.js'][489]++;
pentaho.pda.Column.ELEMENT_TYPES.FACT = "FACT";
_$jscoverage['dataapi/controller.js'][490]++;
pentaho.pda.Column.ELEMENT_TYPES.ATTRIBUTE = "ATTRIBUTE";
_$jscoverage['dataapi/controller.js'][491]++;
pentaho.pda.Column.ELEMENT_TYPES.KEY = "KEY";
_$jscoverage['dataapi/controller.js'][492]++;
pentaho.pda.Column.ELEMENT_TYPES.QUERY = "QUERY";
_$jscoverage['dataapi/controller.js'][493]++;
pentaho.pda.Column.ELEMENT_TYPES.UNKNOWN = "UNKNOWN";
_$jscoverage['dataapi/controller.js'][496]++;
pentaho.pda.Column.JAVA_SQL_TYPES = new Object();
_$jscoverage['dataapi/controller.js'][497]++;
pentaho.pda.Column.JAVA_SQL_TYPES.NUMERIC = 2;
_$jscoverage['dataapi/controller.js'][498]++;
pentaho.pda.Column.JAVA_SQL_TYPES.VARCHAR = 12;
_$jscoverage['dataapi/controller.js'][499]++;
pentaho.pda.Column.JAVA_SQL_TYPES.BOOLEAN = 16;
_$jscoverage['dataapi/controller.js'][500]++;
pentaho.pda.Column.JAVA_SQL_TYPES.DATE = 91;
_$jscoverage['dataapi/controller.js'][502]++;
pentaho.pda.Column.AGG_TYPES = new Object();
_$jscoverage['dataapi/controller.js'][503]++;
pentaho.pda.Column.AGG_TYPES.SUM = "SUM";
_$jscoverage['dataapi/controller.js'][504]++;
pentaho.pda.Column.AGG_TYPES.AVERAGE = "AVERAGE";
_$jscoverage['dataapi/controller.js'][505]++;
pentaho.pda.Column.AGG_TYPES.MIN = "MINIMUM";
_$jscoverage['dataapi/controller.js'][506]++;
pentaho.pda.Column.AGG_TYPES.MAX = "MAXIMUM";
_$jscoverage['dataapi/controller.js'][507]++;
pentaho.pda.Column.AGG_TYPES.COUNT = "COUNT";
_$jscoverage['dataapi/controller.js'][508]++;
pentaho.pda.Column.AGG_TYPES.COUNT_DISTINCT = "COUNT_DISTINCT";
_$jscoverage['dataapi/controller.js'][509]++;
pentaho.pda.Column.AGG_TYPES.NONE = "NONE";
_$jscoverage['dataapi/controller.js'][510]++;
pentaho.pda.Column.AGG_TYPES.VAR = "VAR";
_$jscoverage['dataapi/controller.js'][511]++;
pentaho.pda.Column.AGG_TYPES.STDDEV = "STDDEV";
_$jscoverage['dataapi/controller.js'][512]++;
pentaho.pda.Column.AGG_TYPES.CALC = "CALC";
_$jscoverage['dataapi/controller.js'][513]++;
pentaho.pda.Column.AGG_TYPES.UNKNOWN = "UNKNOWN";
_$jscoverage['dataapi/controller.js'][515]++;
pentaho.pda.Column.AGG_TYPES_STRINGS = {};
_$jscoverage['dataapi/controller.js'][516]++;
pentaho.pda.Column.AGG_TYPES_STRINGS[pentaho.pda.Column.AGG_TYPES.SUM] = pentaho.common.Messages.getString(pentaho.pda.Column.AGG_TYPES.SUM);
_$jscoverage['dataapi/controller.js'][517]++;
pentaho.pda.Column.AGG_TYPES_STRINGS[pentaho.pda.Column.AGG_TYPES.AVERAGE] = pentaho.common.Messages.getString(pentaho.pda.Column.AGG_TYPES.AVERAGE);
_$jscoverage['dataapi/controller.js'][518]++;
pentaho.pda.Column.AGG_TYPES_STRINGS[pentaho.pda.Column.AGG_TYPES.MIN] = pentaho.common.Messages.getString(pentaho.pda.Column.AGG_TYPES.MIN);
_$jscoverage['dataapi/controller.js'][519]++;
pentaho.pda.Column.AGG_TYPES_STRINGS[pentaho.pda.Column.AGG_TYPES.MAX] = pentaho.common.Messages.getString(pentaho.pda.Column.AGG_TYPES.MAX);
_$jscoverage['dataapi/controller.js'][520]++;
pentaho.pda.Column.AGG_TYPES_STRINGS[pentaho.pda.Column.AGG_TYPES.COUNT] = pentaho.common.Messages.getString(pentaho.pda.Column.AGG_TYPES.COUNT);
_$jscoverage['dataapi/controller.js'][521]++;
pentaho.pda.Column.AGG_TYPES_STRINGS[pentaho.pda.Column.AGG_TYPES.COUNT_DISTINCT] = pentaho.common.Messages.getString(pentaho.pda.Column.AGG_TYPES.COUNT_DISTINCT);
_$jscoverage['dataapi/controller.js'][522]++;
pentaho.pda.Column.AGG_TYPES_STRINGS[pentaho.pda.Column.AGG_TYPES.NONE] = pentaho.common.Messages.getString(pentaho.pda.Column.AGG_TYPES.NONE);
_$jscoverage['dataapi/controller.js'][523]++;
pentaho.pda.Column.AGG_TYPES_STRINGS[pentaho.pda.Column.AGG_TYPES.VAR] = pentaho.common.Messages.getString(pentaho.pda.Column.AGG_TYPES.VAR);
_$jscoverage['dataapi/controller.js'][524]++;
pentaho.pda.Column.AGG_TYPES_STRINGS[pentaho.pda.Column.AGG_TYPES.STDDEV] = pentaho.common.Messages.getString(pentaho.pda.Column.AGG_TYPES.STDDEV);
_$jscoverage['dataapi/controller.js'][525]++;
pentaho.pda.Column.AGG_TYPES_STRINGS[pentaho.pda.Column.AGG_TYPES.CALC] = pentaho.common.Messages.getString(pentaho.pda.Column.AGG_TYPES.CALC);
_$jscoverage['dataapi/controller.js'][526]++;
pentaho.pda.Column.AGG_TYPES_STRINGS[pentaho.pda.Column.AGG_TYPES.UNKNOWN] = pentaho.common.Messages.getString(pentaho.pda.Column.AGG_TYPES.UNKNOWN);
_$jscoverage['dataapi/controller.js'][528]++;
pentaho.pda.Column.AGG_TYPE_MAP = new Object();
_$jscoverage['dataapi/controller.js'][529]++;
pentaho.pda.Column.AGG_TYPE_MAP[pentaho.pda.Column.AGG_TYPES.NONE] = "none";
_$jscoverage['dataapi/controller.js'][530]++;
pentaho.pda.Column.AGG_TYPE_MAP[pentaho.pda.Column.AGG_TYPES.SUM] = "sum";
_$jscoverage['dataapi/controller.js'][531]++;
pentaho.pda.Column.AGG_TYPE_MAP[pentaho.pda.Column.AGG_TYPES.AVERAGE] = "average";
_$jscoverage['dataapi/controller.js'][532]++;
pentaho.pda.Column.AGG_TYPE_MAP[pentaho.pda.Column.AGG_TYPES.MIN] = "min";
_$jscoverage['dataapi/controller.js'][533]++;
pentaho.pda.Column.AGG_TYPE_MAP[pentaho.pda.Column.AGG_TYPES.MAX] = "max";
_$jscoverage['dataapi/controller.js'][534]++;
pentaho.pda.Column.AGG_TYPE_MAP[pentaho.pda.Column.AGG_TYPES.COUNT] = "item-count";
_$jscoverage['dataapi/controller.js'][535]++;
pentaho.pda.Column.AGG_TYPE_MAP[pentaho.pda.Column.AGG_TYPES.COUNT_DISTINCT] = "count-distinct";
_$jscoverage['dataapi/controller.js'][536]++;
pentaho.pda.Column.AGG_TYPE_MAP[pentaho.pda.Column.AGG_TYPES.VAR] = "var";
_$jscoverage['dataapi/controller.js'][537]++;
pentaho.pda.Column.AGG_TYPE_MAP[pentaho.pda.Column.AGG_TYPES.STDDEV] = "standard deviation";
_$jscoverage['dataapi/controller.js'][538]++;
pentaho.pda.Column.AGG_TYPE_MAP[pentaho.pda.Column.AGG_TYPES.CALC] = "calculated";
_$jscoverage['dataapi/controller.js'][539]++;
pentaho.pda.Column.AGG_TYPE_MAP[pentaho.pda.Column.AGG_TYPES.UNKNOWN] = "unknown";
_$jscoverage['dataapi/controller.js'][541]++;
pentaho.pda.Column.TYPE_TO_JAVA_SQL_TYPE = new Object();
_$jscoverage['dataapi/controller.js'][542]++;
pentaho.pda.Column.TYPE_TO_JAVA_SQL_TYPE[pentaho.pda.Column.DATA_TYPES.NUMERIC] = pentaho.pda.Column.JAVA_SQL_TYPES.NUMERIC;
_$jscoverage['dataapi/controller.js'][543]++;
pentaho.pda.Column.TYPE_TO_JAVA_SQL_TYPE[pentaho.pda.Column.DATA_TYPES.STRING] = pentaho.pda.Column.JAVA_SQL_TYPES.VARCHAR;
_$jscoverage['dataapi/controller.js'][544]++;
pentaho.pda.Column.TYPE_TO_JAVA_SQL_TYPE[pentaho.pda.Column.DATA_TYPES.DATE] = pentaho.pda.Column.JAVA_SQL_TYPES.DATE;
_$jscoverage['dataapi/controller.js'][545]++;
pentaho.pda.Column.TYPE_TO_JAVA_SQL_TYPE[pentaho.pda.Column.DATA_TYPES.BOOLEAN] = pentaho.pda.Column.JAVA_SQL_TYPES.BOOLEAN;
_$jscoverage['dataapi/controller.js'][546]++;
pentaho.pda.Column.TYPE_TO_JAVA_SQL_TYPE[pentaho.pda.Column.DATA_TYPES.UNKNOWN] = pentaho.pda.Column.JAVA_SQL_TYPES.VARCHAR;
_$jscoverage['dataapi/controller.js'][548]++;
pentaho.pda.Column.JAVA_SQL_TYPE_TO_TYPE = new Object();
_$jscoverage['dataapi/controller.js'][549]++;
pentaho.pda.Column.JAVA_SQL_TYPE_TO_TYPE[pentaho.pda.Column.JAVA_SQL_TYPES.NUMERIC] = pentaho.pda.Column.DATA_TYPES.NUMERIC;
_$jscoverage['dataapi/controller.js'][550]++;
pentaho.pda.Column.JAVA_SQL_TYPE_TO_TYPE[pentaho.pda.Column.JAVA_SQL_TYPES.VARCHAR] = pentaho.pda.Column.DATA_TYPES.STRING;
_$jscoverage['dataapi/controller.js'][551]++;
pentaho.pda.Column.JAVA_SQL_TYPE_TO_TYPE[pentaho.pda.Column.JAVA_SQL_TYPES.DATE] = pentaho.pda.Column.DATA_TYPES.DATE;
_$jscoverage['dataapi/controller.js'][552]++;
pentaho.pda.Column.JAVA_SQL_TYPE_TO_TYPE[pentaho.pda.Column.JAVA_SQL_TYPES.BOOLEAN] = pentaho.pda.Column.DATA_TYPES.BOOLEAN;
_$jscoverage['dataapi/controller.js'][554]++;
pentaho.pda.Column.COMPARATOR = new Object();
_$jscoverage['dataapi/controller.js'][555]++;
pentaho.pda.Column.COMPARATOR.STRING = [[pentaho.common.Messages.getString("EXACTLY_MATCHES"), pentaho.pda.Column.CONDITION_TYPES.EQUAL], [pentaho.common.Messages.getString("CONTAINS"), pentaho.pda.Column.CONDITION_TYPES.CONTAINS], [pentaho.common.Messages.getString("ENDS_WITH"), pentaho.pda.Column.CONDITION_TYPES.ENDSWITH], [pentaho.common.Messages.getString("BEGINS_WITH"), pentaho.pda.Column.CONDITION_TYPES.BEGINSWITH], [pentaho.common.Messages.getString("DOES_NOT_CONTAIN"), pentaho.pda.Column.CONDITION_TYPES.NOT_CONTAINS], [pentaho.common.Messages.getString("IS_NULL"), pentaho.pda.Column.CONDITION_TYPES.IS_NULL], [pentaho.common.Messages.getString("IS_NOT_NULL"), pentaho.pda.Column.CONDITION_TYPES.NOT_NULL]];
_$jscoverage['dataapi/controller.js'][563]++;
pentaho.pda.Column.COMPARATOR.NUMERIC = [[pentaho.common.Messages.getString("EQUALS"), pentaho.pda.Column.CONDITION_TYPES.EQUAL], [pentaho.common.Messages.getString("MORE_THAN_OR_EQUAL"), pentaho.pda.Column.CONDITION_TYPES.MORE_THAN_OR_EQUAL], [pentaho.common.Messages.getString("LESS_THAN_OR_EQUAL"), pentaho.pda.Column.CONDITION_TYPES.LESS_THAN_OR_EQUAL], [pentaho.common.Messages.getString("MORE_THAN"), pentaho.pda.Column.CONDITION_TYPES.MORE_THAN], [pentaho.common.Messages.getString("LESS_THAN"), pentaho.pda.Column.CONDITION_TYPES.LESS_THAN], [pentaho.common.Messages.getString("IS_NULL"), pentaho.pda.Column.CONDITION_TYPES.IS_NULL], [pentaho.common.Messages.getString("IS_NOT_NULL"), pentaho.pda.Column.CONDITION_TYPES.NOT_NULL]];
_$jscoverage['dataapi/controller.js'][572]++;
pentaho.pda.Column.COMPARATOR.BOOLEAN = [["=", pentaho.pda.Column.CONDITION_TYPES.EQUAL], [pentaho.common.Messages.getString("IS_NULL"), pentaho.pda.Column.CONDITION_TYPES.IS_NULL], [pentaho.common.Messages.getString("IS_NOT_NULL"), pentaho.pda.Column.CONDITION_TYPES.NOT_NULL]];
_$jscoverage['dataapi/controller.js'][577]++;
pentaho.pda.Column.COMPARATOR.DATE = [[pentaho.common.Messages.getString("ON"), pentaho.pda.Column.CONDITION_TYPES.EQUAL], [pentaho.common.Messages.getString("ON_OR_AFTER"), pentaho.pda.Column.CONDITION_TYPES.MORE_THAN_OR_EQUAL], [pentaho.common.Messages.getString("ON_OR_BEFORE"), pentaho.pda.Column.CONDITION_TYPES.LESS_THAN_OR_EQUAL], [pentaho.common.Messages.getString("AFTER"), pentaho.pda.Column.CONDITION_TYPES.MORE_THAN], [pentaho.common.Messages.getString("BEFORE"), pentaho.pda.Column.CONDITION_TYPES.LESS_THAN], [pentaho.common.Messages.getString("IS_NULL"), pentaho.pda.Column.CONDITION_TYPES.IS_NULL], [pentaho.common.Messages.getString("IS_NOT_NULL"), pentaho.pda.Column.CONDITION_TYPES.NOT_NULL]];
_$jscoverage['dataapi/controller.js'][588]++;
pentaho.pda.Column.SINGLE_COMPARATORS = {};
_$jscoverage['dataapi/controller.js'][589]++;
pentaho.pda.Column.SINGLE_COMPARATORS[pentaho.pda.Column.CONDITION_TYPES.IS_NULL] = {};
_$jscoverage['dataapi/controller.js'][590]++;
pentaho.pda.Column.SINGLE_COMPARATORS[pentaho.pda.Column.CONDITION_TYPES.NOT_NULL] = {};
_$jscoverage['dataapi/controller.js'][592]++;
pentaho.pda.Column.COMPARATOR_MAP = new Object();
_$jscoverage['dataapi/controller.js'][593]++;
pentaho.pda.Column.COMPARATOR_MAP[pentaho.pda.Column.DATA_TYPES.NUMERIC] = pentaho.pda.Column.COMPARATOR.NUMERIC;
_$jscoverage['dataapi/controller.js'][594]++;
pentaho.pda.Column.COMPARATOR_MAP[pentaho.pda.Column.DATA_TYPES.STRING] = pentaho.pda.Column.COMPARATOR.STRING;
_$jscoverage['dataapi/controller.js'][595]++;
pentaho.pda.Column.COMPARATOR_MAP[pentaho.pda.Column.DATA_TYPES.DATE] = pentaho.pda.Column.COMPARATOR.DATE;
_$jscoverage['dataapi/controller.js'][596]++;
pentaho.pda.Column.COMPARATOR_MAP[pentaho.pda.Column.DATA_TYPES.BOOLEAN] = pentaho.pda.Column.COMPARATOR.BOOLEAN;
_$jscoverage['dataapi/controller.js'][597]++;
pentaho.pda.Column.COMPARATOR_MAP[pentaho.pda.Column.DATA_TYPES.UNKNOWN] = pentaho.pda.Column.COMPARATOR.STRING;
_$jscoverage['dataapi/controller.js'][599]++;
pentaho.pda.Column.DEFAULT_FORMAT_BY_TYPE = new Object();
_$jscoverage['dataapi/controller.js'][600]++;
pentaho.pda.Column.DEFAULT_FORMAT_BY_TYPE[pentaho.pda.Column.DATA_TYPES.NUMERIC] = "default";
_$jscoverage['dataapi/controller.js'][601]++;
pentaho.pda.Column.DEFAULT_FORMAT_BY_TYPE[pentaho.pda.Column.DATA_TYPES.STRING] = "";
_$jscoverage['dataapi/controller.js'][602]++;
pentaho.pda.Column.DEFAULT_FORMAT_BY_TYPE[pentaho.pda.Column.DATA_TYPES.DATE] = "default";
_$jscoverage['dataapi/controller.js'][603]++;
pentaho.pda.Column.DEFAULT_FORMAT_BY_TYPE[pentaho.pda.Column.DATA_TYPES.BOOLEAN] = "";
_$jscoverage['dataapi/controller.js'][604]++;
pentaho.pda.Column.DEFAULT_FORMAT_BY_TYPE[pentaho.pda.Column.DATA_TYPES.UNKNOWN] = "";
_$jscoverage['dataapi/controller.js'][606]++;
pentaho.pda.Column.ALIGNMENT_TYPES = new Object();
_$jscoverage['dataapi/controller.js'][607]++;
pentaho.pda.Column.ALIGNMENT_TYPES.DEFAULT = "not-set";
_$jscoverage['dataapi/controller.js'][608]++;
pentaho.pda.Column.ALIGNMENT_TYPES.LEFT = "left";
_$jscoverage['dataapi/controller.js'][609]++;
pentaho.pda.Column.ALIGNMENT_TYPES.RIGHT = "right";
_$jscoverage['dataapi/controller.js'][611]++;
pentaho.pda.Column.DEFAULT_ALIGNMENT_BY_TYPE = new Object();
_$jscoverage['dataapi/controller.js'][612]++;
pentaho.pda.Column.DEFAULT_ALIGNMENT_BY_TYPE[pentaho.pda.Column.DATA_TYPES.NUMERIC] = pentaho.pda.Column.ALIGNMENT_TYPES.DEFAULT;
_$jscoverage['dataapi/controller.js'][613]++;
pentaho.pda.Column.DEFAULT_ALIGNMENT_BY_TYPE[pentaho.pda.Column.DATA_TYPES.STRING] = pentaho.pda.Column.ALIGNMENT_TYPES.DEFAULT;
_$jscoverage['dataapi/controller.js'][614]++;
pentaho.pda.Column.DEFAULT_ALIGNMENT_BY_TYPE[pentaho.pda.Column.DATA_TYPES.DATE] = pentaho.pda.Column.ALIGNMENT_TYPES.DEFAULT;
_$jscoverage['dataapi/controller.js'][615]++;
pentaho.pda.Column.DEFAULT_ALIGNMENT_BY_TYPE[pentaho.pda.Column.DATA_TYPES.BOOLEAN] = pentaho.pda.Column.ALIGNMENT_TYPES.DEFAULT;
_$jscoverage['dataapi/controller.js'][616]++;
pentaho.pda.Column.DEFAULT_ALIGNMENT_BY_TYPE[pentaho.pda.Column.DATA_TYPES.UNKNOWN] = pentaho.pda.Column.ALIGNMENT_TYPES.DEFAULT;
_$jscoverage['dataapi/controller.js'][621]++;
pentaho.pda.Column.getDefaultFormat = (function (columnType) {
  _$jscoverage['dataapi/controller.js'][623]++;
  return pentaho.pda.Column.DEFAULT_FORMAT_BY_TYPE[columnType];
});
_$jscoverage['dataapi/controller.js'][625]++;
pentaho.pda.Column.getDefaultAlignment = (function (columnType) {
  _$jscoverage['dataapi/controller.js'][627]++;
  return pentaho.pda.Column.DEFAULT_ALIGNMENT_BY_TYPE[columnType];
});
_$jscoverage['dataapi/controller.js'][633]++;
pentaho.pda.model.prototype.getColumnFromList = (function (list) {
  _$jscoverage['dataapi/controller.js'][634]++;
  if (list) {
    _$jscoverage['dataapi/controller.js'][635]++;
    var itemId = list.value;
    _$jscoverage['dataapi/controller.js'][636]++;
    return this.getColumnById(itemId);
  }
  _$jscoverage['dataapi/controller.js'][638]++;
  return null;
});
_$jscoverage['dataapi/controller.js'][641]++;
pentaho.pda.model.prototype.populateListControl = (function (list, fieldTypes, sorted, selectedItem) {
  _$jscoverage['dataapi/controller.js'][643]++;
  var cols = this.getColumnsByFieldTypes(fieldTypes);
  _$jscoverage['dataapi/controller.js'][644]++;
  if ((sorted == true)) {
    _$jscoverage['dataapi/controller.js'][645]++;
    cols = this.sortColumnsByName(cols);
  }
  _$jscoverage['dataapi/controller.js'][647]++;
  var ops = this.createListOptions(cols);
  _$jscoverage['dataapi/controller.js'][648]++;
  var options = list.options;
  _$jscoverage['dataapi/controller.js'][649]++;
  var selectedId = null;
  _$jscoverage['dataapi/controller.js'][650]++;
  if (selectedItem) {
    _$jscoverage['dataapi/controller.js'][651]++;
    if (selectedItem.id) {
      _$jscoverage['dataapi/controller.js'][652]++;
      selectedId = selectedItem.id;
    }
    else {
      _$jscoverage['dataapi/controller.js'][654]++;
      selectedId = selectedItem;
    }
  }
  _$jscoverage['dataapi/controller.js'][657]++;
  var selectedIdx = -1;
  _$jscoverage['dataapi/controller.js'][658]++;
  for (colNo = 0; (colNo < ops.length); (colNo++)) {
    _$jscoverage['dataapi/controller.js'][659]++;
    options[options.length] = ops[colNo];
    _$jscoverage['dataapi/controller.js'][660]++;
    if ((ops[colNo].value == selectedId)) {
      _$jscoverage['dataapi/controller.js'][661]++;
      selectedIdx = colNo;
    }
}
  _$jscoverage['dataapi/controller.js'][664]++;
  list.selectedIndex = selectedIdx;
});
